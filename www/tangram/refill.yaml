# Refill provides a high contrast, black & white basemap useful for data visualization. 
# Give OpenStreetMap data a professional basemap skin using the Tangram graphics library 
# and Mapzen's versatile Vector Tiles. 
#
# Refill is a modern GL take on Geraldine's work on Toner for Stamen as part of their 
# great CityTracking project. Please use and adapt the open source scene file in  
# your own projects!
#
# Authors: Geraldine Sarmiento, Nathaniel V. Kelso
# Read more: https://github.com/tangrams/refill-style
# 

labels-global:
    - &text_visible_continent         true
    - &text_visible_admin             true
    - &text_visible_populated_places  true
    - &icon_visible_populated_places  true
    - &text_visible_neighbourhoods    true
    - &text_visible_neighbourhoods_e  true
    - &text_visible_building          true
    - &text_visible_address           true
    - &label_visible_landuse_green    true
    - &icon_visible_landuse_green     false
    - &text_visible_landuse_green     true
    - &label_visible_poi_landuse      true
    - &icon_visible_poi_landuse       false
    - &text_visible_poi_landuse       true
    - &label_visible_poi_landuse_e    true
    - &icon_visible_poi_landuse_e     false
    - &text_visible_poi_landuse_e     true
    - &label_visible_station          true
    - &icon_visible_station           false
    - &text_visible_station           true
    - &text_visible_water_labels      true
    - &text_visible_highway           true
    - &text_visible_highway_e         false
    - &text_visible_trunk_primary     true
    - &text_visible_trunk_primary_e   false
    - &text_visible_secondary         true
    - &text_visible_secondary_e       false
    - &text_visible_tertiary          true
    - &text_visible_tertiary_e        false
    - &text_visible_minor_road        true
    - &text_visible_minor_road_e      true
    - &text_visible_service_road      true
    - &text_visible_path              true
    - &text_visible_steps             true


settings:
    cameras:             
        - &camera_settings            { type: isometric, axis: [0, .1], vanishing_point: [0, -500] }

    lights:              
        - &light_settings             { type: directional, direction: [1, 1, -.9], diffuse: 0.5, ambient: 0.85 }

    roads:
        - &highway1                   [1.00,1.00,1.00]
        - &highway_link1              [0.00, 0.00, 0.00]
        - &highway_casing1            [0.40, 0.40, 0.40]
        - &highway_tunnel1            [0.7, 0.7, 0.7]
        - &highway_tunnel_casing1     [1.00, 0.00, 0.00]
        - &highway_link_tunnel_casing1 [1.00, 0.00, 0.00]
        - &ferry1                     [0.75,0.75,0.75]
        - &major_road1                [0.0, 0.0, 0.0]
        - &major_road1b               [0.935, 0.935, 0.935]
        - &major_road1c               white    #15%
        - &major_road2                [0.935, 0.935, 0.935]
        - &major_road2a               [0.935, 0.935, 0.935]
        - &major_road2b               [0.935, 0.935, 0.935]
        - &major_road3                [0.935, 0.935, 0.935]
        - &major_road4                [0.00, 0.00, 0.00]
        - &major_casing1              [0.40, 0.40, 0.40]        # same as highway_casing1
        - &major_casing2              [0.40, 0.40, 0.40]        # zoomed out
        - &major_tunnel1              [0.7, 0.7, 0.7]
        - &major_tunnel_casing1       [1.00, 0.00, 0.00]
        - &major_route1               [0.0, 0.0, 0.0]
        - &major_route2               [0.2, 0.2, 0.2]           # zoomed out
        - &minor_route                [0.97, 0.97, 0.97]        # same as major_route
        - &minor_road1                [0.935, 0.935, 0.935]     # natural earth
        - &minor_road2                [0.935, 0.935, 0.935]     # natural earth, same as major_road2
        - &minor_road3                [0.935, 0.935, 0.935]
        - &minor_road4                [0.935, 0.935, 0.935]     # zoomed out
        - &minor_road5                [0.935, 0.935, 0.935]     # zoomed out, again
        - &minor_casing1              white                     # same as highway_casing1
        - &minor_casing2              white                     # zoomed out
        - &minor_tunnel1              [0.7, 0.7, 0.7]
        - &minor_tunnel_casing1       [1.00, 0.00, 0.00]
        - &service_road1              [0.935, 0.935, 0.935]
        - &service_road2              white
        - &service_road_casing1       [0.40, 0.40, 0.40]
        - &service_road_casing2       white
        - &path1                      [0.97, 0.97, 0.97]
        - &path2                      [0.97, 0.97, 0.97]        # zoomed out
        - &path_casing1               [0.40, 0.40, 0.40]
        - &path_bridge_casing1        [0.40, 0.40, 0.40]
        - &path_bridge_casing2        [0.40, 0.40, 0.40]        # zoomed out
        - &path_steps1                red
        - &path_steps1_b              '#ccc'

    boundaries:
        - &country_boundary           '#ccc'
        - &region_boundary            '#ccc'
        - &subregion_boundary         '#ccc'

    areas:
        - &scene1      white                    # map background
        - &water1      [0.870, 0.870, 0.870]    # water wave
        - &water2      [0.760, 0.760, 0.760]    # water wave
        - &water3      [0.5, 0.5, 0.5]          # playa texture
        - &water1_o    '#fff'                   # water stroke (ocean coastline)
        - &water2_o    '#d1d1d1'                # water stroke 2 (streams, lake outlines)
        - &earth1      white                    # land color
        - &earth2      '#e9e4e0'                # urban
        - &earth2_v    false                    # urban
        - &green1      [0.50,0.50,0.50]         # park
        - &green1_r    '#bbbbbb'                # park roads
        - &green1_b    [.65, .65, .65]          # park buildings
        - &green1_bo   [.8, .8, .8]             # park building outlines
        - &green2      [0.90,0.90,0.90]         # cemetery
        - &green3      '#9a9a9a'                # golf course
        - &green4      [0.90,0.90,0.90]         # farm faint
        - &green4_v    false                    # farm faint
        - &green5      [0.75,0.75,0.75]         # farm
        - &green6      [0.40,0.40,0.40]         # nature reserve
        - &green7      [0.85,0.85,0.85]         # forest
        - &green8      [0.80,0.80,0.80]         # conservation
        - &orange1     '#aaaaaa'                # stadium
        - &orange2     [0.40,0.40,0.40]         # pitch (play field)
        - &brown1      '#7b7b7b'                # university
        - &brown1_r    '#bbbbbb'                # university roads
        - &brown1_b    [.65, .65, .65]          # university buildings
        - &brown1_bo   [.8, .8, .8]             # university building outlines
        - &brown2      '#aaaaaa'                # school
        - &brown3      [0.40,0.40,0.40]         # playground
        - &red1        '#a2a2a2'                # hospital
        - &red1_r      '#bbbbbb'                # hospital roads
        - &red1_b      [.65, .65, .65]          # hospital buildings
        - &red1_bo     [.8, .8, .8]             # hospital building outlines
        - &grey1       '#cccccc'                # pedestrian, retail, airport apron, parking, church
        - &grey1_e     '#dad6d4'                # pedestrian, retail, airport apron, parking, church early zoom 14
        - &grey1_v     true                     # pedestrian, retail, airport apron, parking, church
        - &grey2       [0.5, 0.5, 0.5]          # airport runway
        - &grey3       '#bbbbbb'                # railway
        - &grey4       '#ffc52a'                # airport taxiway
        - &grey5       '#ffc52a'                # airport taxiway
        - &grey6       '#dddddd'                # industrial
        - &grey6_b     [.65, .65, .65]          # industrial buildings
        - &grey6_bo    [.8, .8, .8]             # industrial building outlines
        - &grey7       '#ecebe9'                # pedestrian, match minor road / path color
        - &grey7_v     true                     # pedestrian visibility
        - &grey8       '#ecebe9'                # winter sports
        - &grey8_v     true                     # winter sports visibility
        - &purple      '#f0e1e1'                # airport
        - &purple_v    false                    # airport
        - &mystry1     '#aaaaaa'                # recreation ground (type of park, sometimes around reservoirs)
        - &building1   white                    # building
        - &building2   white                    # building stroke
        - &building_o  25                       # building stroke order
        - &building_e  true                     # building stroke order

    labels:
        - &text_fill   '#000'                   # WHITE
        - &text_fill2  '#000'                   # WHITE
        - &text_fill_water   '#000'             # blue
        - &text_fill_park    '#000'             # green
        - &text_fill_building '#000'            # tan
        - &text_stroke '#fff'                   # land color
        - &text_stroke_park '#fff'              # land color
        - &text_stroke_water '#fff'
        - &townspot_sprite   townspot-m-rev     # depends on land color and text settings
        - &text_font_family  'Open Sans'        # branding in asperational Unicode, yo (or Helvetica)


textures:
    pois:
        url: images/poi_icons_18@2x.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            adult-boutique: [252, 108, 36, 36]
            airport: [180, 36, 36, 36]
            animal-shelter: [432, 0, 36, 36]
            antique-shop: [216, 108, 36, 36]
            aquarium: [684, 252, 36, 36]
            arcade: [576, 252, 36, 36]
            art-gallery: [540, 252, 36, 36]
            arts-crafts: [180, 108, 36, 36]
            athletics-sports: [288, 216, 36, 36]
            atm: [36, 216, 36, 36]
            automotive-shop: [108, 216, 36, 36]
            bagel-shop: [468, 288, 36, 36]
            bakery: [144, 252, 36, 36]
            bank: [72, 216, 36, 36]
            bar: [468, 216, 36, 36]
            baseball-field: [72, 144, 36, 36]
            basketball-court: [36, 144, 36, 36]
            basketball-stadium: [360, 252, 36, 36]
            bathroom: [216, 144, 36, 36]
            battlefield: [360, 144, 36, 36]
            bbq: [36, 288, 36, 36]
            beach: [288, 144, 36, 36]
            beach-resort: [252, 144, 36, 36]
            beer-garden: [576, 288, 36, 36]
            bench: [756, 0, 36, 36]
            bicycle-parking: [648, 180, 36, 36]
            bike-shop: [0, 216, 36, 36]
            boat-ferry: [144, 36, 36, 36]
            boat-ramp: [360, 108, 36, 36]
            bookstore: [937, 180, 36, 36]
            bowling-alley: [504, 252, 36, 36]
            breakfast: [108, 288, 36, 36]
            bridal-shop: [144, 72, 36, 36]
            bridge: [540, 144, 36, 36]
            building: [684, 216, 36, 36]
            burger: [360, 288, 36, 36]
            bus-station: [72, 36, 36, 36]
            butcher: [900, 72, 36, 36]
            camera-store: [901, 180, 36, 36]
            campground: [504, 144, 36, 36]
            candy-store: [180, 288, 36, 36]
            capital-l: [841, 288, 23, 23]
            capital-m: [822, 288, 18, 18]
            capital-s: [806, 288, 17, 17]
            capital-xl: [863, 288, 25, 25]
            capital-xs: [792, 288, 13, 13]
            car-dealership: [864, 180, 36, 36]
            car-wash: [828, 180, 36, 36]
            carribean-restaurant: [36, 252, 36, 36]
            casino: [468, 252, 36, 36]
            castle: [180, 72, 36, 36]
            cemetery: [468, 144, 36, 36]
            cheese-shop: [144, 288, 36, 36]
            chinese-restaurant: [72, 252, 36, 36]
            church: [72, 180, 36, 36]
            city: [756, 108, 36, 36]
            clinic: [216, 0, 36, 36]
            clothing-store: [756, 252, 36, 36]
            cocktail-bar: [432, 216, 36, 36]
            coffee-shop: [108, 252, 36, 36]
            college-university: [864, 252, 36, 36]
            comedy-club: [432, 252, 36, 36]
            concert-hall: [396, 252, 36, 36]
            convenience-store: [108, 108, 36, 36]
            cosmetics-shop: [72, 108, 36, 36]
            courthouse: [396, 0, 36, 36]
            credit-union: [792, 180, 36, 36]
            cupcake-shop: [937, 216, 36, 36]
            daycare: [36, 108, 36, 36]
            dentist: [252, 0, 36, 36]
            department-store: [756, 180, 36, 36]
            design-studio: [108, 72, 36, 36]
            dessert: [36, 0, 36, 36]
            dog-run: [216, 216, 36, 36]
            donut: [252, 288, 36, 36]
            electronics-store: [612, 180, 36, 36]
            ev-charging-station: [720, 180, 36, 36]
            factory: [648, 216, 36, 36]
            farm: [432, 144, 36, 36]
            farmers-market: [540, 180, 36, 36]
            field: [396, 144, 36, 36]
            financial-service: [576, 180, 36, 36]
            fire-station: [360, 0, 36, 36]
            fish-market: [504, 180, 36, 36]
            fishing-spot: [648, 252, 36, 36]
            fitness: [792, 72, 36, 36]
            flea-market: [937, 72, 36, 36]
            flower-shop: [937, 144, 36, 36]
            food-court: [468, 180, 36, 36]
            food-drink-shop: [864, 72, 36, 36]
            football-stadium: [828, 252, 36, 36]
            ford: [576, 0, 36, 36]
            forest: [103, 324, 36, 36]
            fountain: [144, 180, 36, 36]
            fried-chicken-joint: [901, 216, 36, 36]
            fun-fair: [612, 144, 36, 36]
            furniture-store: [360, 180, 36, 36]
            gaming-cafe: [864, 144, 36, 36]
            garden: [324, 144, 36, 36]
            garden-center: [828, 72, 36, 36]
            gas-station: [0, 288, 36, 36]
            gastropub: [0, 252, 36, 36]
            gate: [684, 0, 36, 36]
            gay-bar: [396, 216, 36, 36]
            general-entertainment: [324, 252, 36, 36]
            general-travel: [36, 36, 36, 36]
            generic: [756, 288, 36, 36]
            german-restaurant: [864, 216, 36, 36]
            gift-shop: [828, 144, 36, 36]
            golf-course: [0, 144, 36, 36]
            gourmet-shop: [901, 144, 36, 36]
            government-building: [252, 216, 36, 36]
            grocery-store: [432, 180, 36, 36]
            harbor-marina: [180, 216, 36, 36]
            hardware-store: [756, 72, 36, 36]
            hiking-trail: [720, 108, 36, 36]
            historic-site: [792, 144, 36, 36]
            hobby-shop: [684, 72, 36, 36]
            hockey-field: [937, 108, 36, 36]
            hospital: [180, 0, 36, 36]
            hot-dog-joint: [612, 288, 36, 36]
            hot-pot-restaurant: [216, 288, 36, 36]
            hot-spring: [252, 72, 36, 36]
            hotel: [0, 36, 36, 36]
            hunting-supply: [648, 72, 36, 36]
            ice-cream-shop: [648, 288, 36, 36]
            information: [720, 288, 36, 36]
            internet-cafe: [612, 72, 36, 36]
            island: [684, 108, 36, 36]
            jewelry-store: [576, 72, 36, 36]
            karaoke: [0, 180, 36, 36]
            lake: [648, 108, 36, 36]
            landmark: [324, 0, 36, 36]
            laundry: [540, 72, 36, 36]
            library: [0, 0, 36, 36]
            light-rail: [937, 0, 36, 36]
            lighthouse: [576, 108, 36, 36]
            liquor-store: [396, 180, 36, 36]
            lounge: [360, 216, 36, 36]
            mall: [504, 72, 36, 36]
            marijuana-dispensary: [468, 72, 36, 36]
            market: [432, 72, 36, 36]
            medical-center: [576, 216, 36, 36]
            military-base: [180, 144, 36, 36]
            mine: [720, 72, 36, 36]
            miscellaneous-shop: [360, 72, 36, 36]
            mobile-phone-shop: [324, 72, 36, 36]
            molecular-gastronomy: [324, 288, 36, 36]
            mosque: [108, 0, 36, 36]
            motorcycle-shop: [72, 72, 36, 36]
            mountain: [540, 108, 36, 36]
            movie-theatre: [720, 252, 36, 36]
            moving-target: [901, 0, 36, 36]
            museum: [756, 144, 36, 36]
            music-store: [36, 72, 36, 36]
            music-venue: [288, 252, 36, 36]
            nail-salon: [0, 72, 36, 36]
            neighborhood: [504, 108, 36, 36]
            newsstand: [937, 36, 36, 36]
            nightlife: [180, 252, 36, 36]
            noodle-shop: [432, 288, 36, 36]
            office: [144, 144, 36, 36]
            office-supplies: [864, 36, 36, 36]
            optical-shop: [900, 36, 36, 36]
            other-outdoors: [468, 108, 36, 36]
            park: [108, 180, 36, 36]
            parking: [684, 180, 36, 36]
            performing-arts: [252, 252, 36, 36]
            pet-store: [828, 36, 36, 36]
            pharmacy: [0, 108, 36, 36]
            photography-lab: [792, 36, 36, 36]
            picnic-spot: [720, 0, 36, 36]
            pier: [864, 0, 36, 36]
            pizza: [684, 288, 36, 36]
            playground: [288, 72, 36, 36]
            police: [288, 0, 36, 36]
            pool: [432, 108, 36, 36]
            pool-hall: [720, 144, 36, 36]
            post-office: [540, 216, 36, 36]
            power-pylon: [612, 216, 36, 36]
            public-art: [216, 252, 36, 36]
            racetrack: [684, 144, 36, 36]
            ramen: [396, 288, 36, 36]
            real-estate: [756, 36, 36, 36]
            record-shop: [720, 36, 36, 36]
            recycling-facility: [684, 36, 36, 36]
            rental-car: [828, 0, 36, 36]
            rest-area: [792, 0, 36, 36]
            restaurant: [288, 288, 36, 36]
            river: [396, 108, 36, 36]
            road: [612, 0, 36, 36]
            ruin: [648, 0, 36, 36]
            salon-barber: [648, 36, 36, 36]
            school: [108, 144, 36, 36]
            ship-wreck: [108, 36, 36, 36]
            shoe-store: [396, 72, 36, 36]
            skate-park: [900, 108, 36, 36]
            skating-rink: [864, 108, 36, 36]
            ski-area: [180, 180, 36, 36]
            smoke-shop: [612, 36, 36, 36]
            soccer-field: [828, 108, 36, 36]
            soccer-stadium: [792, 252, 36, 36]
            soup-place: [828, 216, 36, 36]
            spa-massage: [576, 36, 36, 36]
            spiritual-center: [504, 216, 36, 36]
            sporting-goods-shop: [540, 36, 36, 36]
            spring: [612, 108, 36, 36]
            stable: [324, 108, 36, 36]
            stadium: [288, 180, 36, 36]
            steakhouse: [72, 288, 36, 36]
            storage-facility: [504, 36, 36, 36]
            subway: [540, 0, 36, 36]
            surf-shop: [144, 108, 36, 36]
            sushi-restaurant: [36, 180, 36, 36]
            swimming: [324, 180, 36, 36]
            synagogue: [72, 0, 36, 36]
            tailor-shop: [468, 36, 36, 36]
            tanning-salon: [432, 36, 36, 36]
            tattoo-parlor: [396, 36, 36, 36]
            taxi: [504, 0, 36, 36]
            tea-room: [792, 216, 36, 36]
            tennis: [216, 180, 36, 36]
            theme-park: [648, 144, 36, 36]
            thrift-vintage-store: [360, 36, 36, 36]
            toll-booth: [937, 252, 36, 36]
            townspot-l: [52, 324, 23, 23]
            townspot-l-rev: [940, 288, 23, 23]
            townspot-m: [32, 324, 20, 20]
            townspot-m-rev: [920, 288, 20, 20]
            townspot-s: [13, 324, 18, 18]
            townspot-s-rev: [902, 288, 18, 18]
            townspot-xl: [75, 324, 28, 28]
            townspot-xl-rev: [964, 288, 28, 28]
            townspot-xs: [0, 324, 13, 13]
            townspot-xs-rev: [889, 288, 13, 13]
            toy-game-store: [324, 36, 36, 36]
            track: [252, 180, 36, 36]
            traffic-signal: [901, 252, 36, 36]
            train-station: [468, 0, 36, 36]
            travel-agency: [288, 36, 36, 36]
            veterinarian: [144, 0, 36, 36]
            video-game-store: [252, 36, 36, 36]
            video-store: [216, 36, 36, 36]
            view-point: [612, 252, 36, 36]
            vineyard: [144, 216, 36, 36]
            volcano: [288, 108, 36, 36]
            volleyball-court: [792, 108, 36, 36]
            well: [216, 72, 36, 36]
            whisky-bar: [324, 216, 36, 36]
            wine-bar: [540, 288, 36, 36]
            wine-shop: [504, 288, 36, 36]
            winery: [756, 216, 36, 36]
            wings-joint: [720, 216, 36, 36]
            zoo: [576, 144, 36, 36]


sources:
    osm:
        type: TopoJSONTiles
        #url:  //localhost:8080//osm/all/{z}/{x}/{y}.topojson
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-W2tPU-Y

cameras:
    isometric:
        type: isometric

styles:
##### LIBRARY OF FUNCTIONS 
#    SPACE functions
    space-tile:
        shaders:
            blocks:
                global: |
                    // Variant to be add to both vertex and fragments shaders
                    varying vec3 v_pos;
                    //
                    // Get the coordinates in tile space
                    // ================================
                    vec2 getTileCoords() {
                        return fract(v_pos.xy);
                    }

                position: |
                    // Normalize the attribute position of a vertex
                    v_pos = modelPosition().xyz;
    space-constant:
        shaders:
            blocks:
                global: |
                    // Get the constant coordinates (glitches on zooms)
                    // ================================
                    vec2 getConstantCoords () {
                        #ifdef TANGRAM_FRAGMENT_SHADER
                        const float pixel_scale = 695.;
                        float meter_pixels = u_meters_per_pixel / u_device_pixel_ratio;
                        vec2 st = gl_FragCoord.xy/pixel_scale;
                        const float dot_wrap = 1000.;
                        st += mod(u_map_position.xy / meter_pixels, dot_wrap)/pixel_scale;
                        return st;
                        #else
                        return vec2(0.0,0.0);
                        #endif
                    }
#    TILING functions
    tiling-tile:
        shaders:
            blocks:
                global: |
                    // Repeats a coordinate space (st) in diferent tiles
                    // ================================
                    vec2 tile(vec2 st, float zoom){
                        st *= zoom;
                        return fract(st);
                    }
    tiling-brick:
        shaders:
            blocks:
                global: |
                    // Repeats a coordinate space (st) in diferent brick-like tiles
                    // ================================
                    vec2 brick(vec2 st, float zoom){
                        st *= zoom;
                        // Here is where the offset is happening
                        st.x += step(1., mod(st.y, 2.0)) * 0.5;
                        return fract(st);
                    }
    tiling-mirror:
        shaders:
            blocks:
                global: |
                    // Mirror the coordinate space 
                    // ================================
                    vec2 mirror(vec2 _st, vec2 _zoom){
                        _st *= _zoom;
                        if (fract(_st.y * 0.5) > 0.5){
                            _st.x = _st.x + 0.5;
                            _st.y = 1.0 - _st.y;
                        }
                        return fract(_st);
                    }             
#    Usefull functions
    functions-aastep:
        shaders:
            extensions: OES_standard_derivatives
            blocks:
                global: |
                    // AntiAliased Step function
                    //=============================
                    float aastep(float threshold, float value) {
                        #ifdef TANGRAM_FRAGMENT_SHADER
                            #ifdef TANGRAM_EXTENSION_OES_standard_derivatives
                                float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;
                                return smoothstep(threshold-afwidth, threshold+afwidth, value);
                            #else
                                return step(threshold, value);
                            #endif  
                        #else
                            return step(threshold, value);
                        #endif
                    }
#    Generative functions
    generative-random:
        shaders:
            blocks:
                global: |
                    // 1D Random for 1 and 2 dimentions
                    // ================================
                    float random(float x) { return fract(sin(x)*43758.5453);}
                    float random(vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }
                    float random(vec3 p) { return fract(sin(dot(p.xyz, vec3(70.9898,78.233,32.4355)))* 43758.5453123); }
                    //
                    // 2D Random for 2 dimentions
                    // ================================
                    vec2 random2 (vec2 xy) { return fract(sin(vec2(dot(xy,vec2(127.1,311.7)),dot(xy,vec2(269.5,183.3))))*43758.5453); }
                    //
                    // 3D Random for 2 dimentions
                    // ================================
                    vec3 random3 (vec2 xy) { return fract(sin(vec3( dot(xy,vec2(127.1,311.7)), dot(xy,vec2(269.5,183.3)), dot(xy,vec2(419.2,371.9)) ))*43758.5453); }
                    vec3 random3 (vec3 c) {
                        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));
                        vec3 r;
                        r.z = fract(512.0*j);
                        j *= .125;
                        r.x = fract(512.0*j);
                        j *= .125;
                        r.y = fract(512.0*j);
                        return r-0.5;
                    }
#    Drawing Shapes functions
    shapes-circle:
        mix: functions-aastep
        shaders:
            defines:
                PI: 3.14159265358979323846
            blocks:
                global: |
                    // get distance field of a Circle
                    // ================================
                    float circleDF (vec2 st) {
                        return dot(st,st);
                    }
                    //
                    // Draw a circle in the middle of the ST space
                    // ================================
                    float circle (vec2 st, float radius) {
                        return 1.-aastep(radius, circleDF(st-vec2(0.5))*PI);
                    }
    shapes-rect:
        shaders:
            blocks:
                global: |
                    // get distance field of a rectangle in the center
                    // ================================
                    float rectDF(vec2 st, vec2 size) {
                        //float aspect = u_resolution.x/u_resolution.y;
                        st = st*2.-1.;
                        //st.x *= aspect;
                        return length(max(abs(st)-size,.0));
                    }
                    float rectDF(vec2 st, float size) {
                        //float aspect = u_resolution.x/u_resolution.y;
                        st = st*2.-1.;
                        //st.x *= aspect;
                        return length(max(abs(st)-size,.0));
                    }
                    
                    // Draw a round corners rectangle in the center
                    // ================================
                    float rect(vec2 st, vec2 size, float radio) {
                        radio = max(.000001, radio);
                        return 1.0-step(radio, rectDF(st, size-radio));
                    }
                    
                    float rect(vec2 st, float size, float radio) {
                        return rect(st,vec2(size),radio);
                    }
                    
                    // Draw a rectangle in the center
                    // ================================
                    float rect(vec2 st, vec2 size){
                        size = .25-size*.125;
                        vec2 uv = step(size,st*(1.0-st));
                        return (uv.x*uv.y);
                    }
                    
                    float rect(vec2 st, float size){
                        return rect(st,vec2(size));
                    }
#    Patterns compositions functions
    patterns-stripes:
        mix: functions-aastep
        shaders:
            defines:
                PI: 3.14159265358979323846
            blocks:
                global: |
                    // Return a distance function of stripes
                    float stripesDF (vec2 st) {
                        return abs(sin(st.y*PI));
                    }
                    
                    // Adjustable width stripes
                    float stripes (vec2 st, float width) {
                        return aastep(width,stripesDF(st));
                    }
                    
                    // Faster optimisation of diagonal stripes
                    float diagonalStripes (vec2 st) {
                        vec2 i_st = floor(st);
                        vec2 f_st = fract(st);
                        if (mod(i_st.y,2.) - mod(i_st.x,2.) == 0.) {
                            return 1.0 - aastep(f_st.x,f_st.y);
                        } else {
                            return aastep(f_st.x,f_st.y);
                        }
                    }
    patterns-dots:
        mix: [space-tile, tiling-brick, shapes-circle]
        shaders:
            blocks: 
                global: |
                    // Interpolated dot patern between zooms attached to tile coords
                    float TileDots(float scale, float size) {
                        // Beginning of the transition
                        vec2 IN = brick(getTileCoords()*scale,2.);
                        float A = circleDF(vec2(0.5)-IN)*1.8;
                        //
                        // If over 18. add an end B to transition with
                        float d = 0.0;
                        if (u_map_position.z < 18.) {
                            vec2 OUT = fract(getTileCoords()*scale*2.);
                            float B = circleDF(vec2(0.25)-OUT)*5.;
                            B = min(B, circleDF(vec2(0.75,0.25)-OUT)*5.);
                            B = min(B, circleDF(vec2(0.5,0.75)-OUT)*5.);
                            B = min(B, circleDF(vec2(0.,0.75)-OUT)*5.);
                            B = min(B, circleDF(vec2(1.,0.75)-OUT)*5.);
                            d = mix(A, B, pow(fract(u_map_position.z),10.));
                        } else {
                            d = A;
                        }
                        //
                        // Use the antialias step to make a shape from the DF
                        return aastep(size,d);;
                    }
##### ACTUAL STYLES
    dashedline:
        base: lines
        mix: tiling-mirror
        lighting: false # ignore lights
        texcoords: true
        shaders:
            blocks:
                global: |
                    float stripes(vec2 st){
                        st = st * 10.;
                        return step(.5, 1.0 - smoothstep(.3, 1., abs(sin(st.y * 3.14159))));
                    }
                color: |
                    vec2 st = v_texcoord;
                    vec4 foreground = vec4(0.850,0.850,0.850,1.0);
                    color = mix(v_color, foreground, stripes(st));    
    water-gradient:
        base: polygons
        shaders:
            blocks:
                filter: |
                    color.rgb = mix(vec3(1.0), vec3(0.970), gl_FragCoord.x / u_resolution.x + gl_FragCoord.y / u_resolution.y); 

    pixel-pattern-light:
        mix: [space-tile, generative-random]
        base: polygons
        shaders:
            blocks:
                filter: |
                    vec3 pos = vec3(getTileCoords()*130.0,1.0);
                    color.rgb = vec3(random(abs(floor(pos)))+0.785);

    pixel-pattern-dark:
        mix: [space-tile, generative-random]
        base: polygons
        shaders:
            blocks:
                filter: |
                    vec3 pos = vec3(getTileCoords()*130.0,1.0);
                    color.rgb = vec3(random(abs(floor(pos)))+0.635);

    waves:
        base: polygons
        mix: [space-constant, patterns-stripes]
        shaders:
            defines:
                COLOR1: vec3(0.890)
                COLOR2: vec3(0.935)
            blocks:
                global: |
                    float stripes2(vec2 st){
                        return step(.3,1.0-smoothstep(.5,1.,abs(sin(st.y*3.14159265358))));
                    }
                filter: |
                    vec2 st = getConstantCoords();

                    const float wave_width = 30.0;
                    const float wave_height = .01;
                    st.y += sin(st.x*wave_width)*wave_height;

                    // gradient
                    color.rgb = mix(COLOR1, color.rgb, gl_FragCoord.x / u_resolution.x);
                    color = mix(color,vec4(COLOR2,1.0),stripes(st*92.,.5))*1.0;

    waves2:
        base: polygons
        mix: waves
        shaders:
            defines:
                COLOR1: vec3(0.840)
                COLOR2: vec3(0.910)


    stream-waves:
        base: lines
        mix: [space-constant, patterns-stripes]
        shaders:
            defines:
                COLOR1: vec3(0.890)
                COLOR2: vec3(0.930)

    coast:
        base: lines
        mix: [space-constant]
        blend: overlay
        shaders:
            blocks:
                global: |
                    mat2 rotate2d(float angle){
                        return mat2(cos(angle),-sin(angle),
                                    sin(angle),cos(angle));
                    }
                    
                    float stripes(vec2 st){
                        st = rotate2d(3.14159265358*-0.25 )*st;
                        //return step(.9,1.0-smoothstep(.5,1.,abs(sin(st.x*3.14159265358))));
                        return step(.75,1.0-smoothstep(.75,1.,abs(sin(st.x*3.14159265358)))); // more spaced out stripes?
                    }
                color: |
                    vec2 st = getConstantCoords();
                    color = mix(vec4(color.rgb, 0.9), vec4(0.0), stripes(st*130.))*.8; // transparent stripes
                    
    dots:
        mix: [space-tile, tiling-tile, shapes-circle]
        base: polygons
        shaders:
            defines:
                PATTERN_SCALE: 50.0
                DOT_SIZE: .1
                COLOR1: vec3(1.00,1.00,1.00)
                COLOR2: color.rgb  
            blocks:
                color: |
                    vec2 st = getTileCoords();
                    st = tile(st,PATTERN_SCALE);
                    float dot_size = DOT_SIZE;
                    float b = circle(st, dot_size);
                    color *= vec4(b);
                filter: |
                    color.rgb = mix(COLOR1, COLOR2, b);

    dots-medium:
        mix: dots
        base: polygons
        shaders:
            defines:
                PATTERN_SCALE: 60.0
                DOT_SIZE: .25
    dots3:
        mix: dots
        base: polygons
        shaders:
            defines:
                PATTERN_SCALE: 70.0
                DOT_SIZE: .125
                    
    park-dots1:
        mix: dots
        shaders:
            defines:
                COLOR1: vec3(1.00,1.00,1.00)
                COLOR2: color.rgb

    medium-dots:
        mix: dots-medium
        shaders:
            defines:
                COLOR1: vec3(1.00,1.00,1.00)
                COLOR2: color.rgb

    tiny-dots:
        mix: dots3
        shaders:
            defines:
                COLOR1: vec3(1.00,1.00,1.00)
                COLOR2: color.rgb                

    park-dots3:
        mix: dots
        shaders:
            defines:
                COLOR1: vec3(1.00,1.00,1.00)
                COLOR2: vec3(0.760,0.760,0.760)

    dots-rev:
        base: polygons
        mix: patterns-dots
        shaders:
            blocks:
                color: |
                    color.rgb = mix(vec3(1.000), color.rgb, TileDots(35.0, 0.31));

    horizontal-bars:
        base: polygons
        mix: [space-constant, shapes-rect]
        texcoords: false
        shaders:
            blocks:
                global: |
                    float bar(in vec2 st, float size){
                        return  rect(st, vec2(size*0.90,size*0.2));
                    }
                filter: |
                    vec2 pos = getConstantCoords()*50.0;
                    float pct = clamp(bar(fract(pos),0.5),0.0,1.0);
                    color.rgb = mix(vec3(1.0,1.0,1.0),color.rgb,pct);

    horizontal-bars-rev:
        base: polygons
        mix: [space-constant, shapes-rect]
        texcoords: false
        shaders:
            blocks:
                global: |
                    float bar(in vec2 st, float size){
                        return rect(st, vec2(size*1.05,size*0.5));
                    }
                filter: |
                    vec2 pos = getConstantCoords()*50.0;
                    float pct = clamp(bar(fract(pos),0.5),0.0,1.0);
                    color.rgb = mix(color.rgb,vec3(1.0,1.0,1.0),pct);

    scale-buildings:
        shaders:
            blocks:
                position: |
                    // scale buildings based on zoom
                    float zoom = u_map_position.z;
                    float min = .1;       // minimum building scale
                    float midpoint = 16.; // middle of zoom range
                    float inspeed = .1;   // number of zooms to scale buildings up
                    float outspeed = 2.;  // number of zooms to scale buildings back down
                    float e = 0.;

                    if (zoom >= midpoint) {
                        e = (zoom - midpoint) / (outspeed * .2);
                    } else {
                        e = abs(zoom - midpoint) / inspeed;
                    }
                    position.z *= ((1. - min) / (1. + (exp(e)))) + min;

    building-grid:
        base: polygons
        mix: [hsv, scale-buildings]
        texcoords: true
        material:
            diffuse:
                texture: building-grid
                mapping: uv
        shaders:
            defines:
                WALL_TINT: vec3(1., 3., .800) # modifies roof color HSV
            blocks:
                filter: |
                    vec2 st = v_texcoord.xy;
                    vec2 f_st = fract(st*6.);
                    vec2 i_st = floor(st*6.);
                    // color.rg = f_st;
                    
                    vec2 pct = step(vec2(0.09),f_st);;
                    color.rgb = mix(vec3(1.0), vec3(0.25),(0.5-(pct.x * pct.y)));
                    
                    if ( dot(vec3(0.,0.,1.),normal) == 1.0 ) {
                        // If it's a roof
                        color.rgb = vec3(0.988);
                    }

    building-lines:
        base: lines
        mix: scale-buildings
        texcoords: true

    icons:
        base: points
        texture: pois
        interactive: true

    text-blend-order:
        base: text
        blend_order: 1

scene:
    background:
        color: *scene1

layers:
    # Map overlays for styling the server response (using special source layer names) for route line, find_me location gem, and search result pins
    route:
        data: { source: route }
        draw:
            lines:
                color: 'purple'
                order: 50
                width: 5px
    find_me:
        data: { source: find_me }
        draw:
            icons:
                priority: 1
                sprite: capital-xl
                size: 18px
    search:
        data: { source: search }
        draw:
            icons:
                priority: 2
                sprite: ice-cream-shop
                size: 18px

    # Basemap styling
    earth:
        data: { source: osm, layer: earth }
        draw:
            # lines:
            #     order: 10
            #     width: 1px
            #     color: white
            polygons:
                order: 0
                color: [1.0,1.0,1.0]

    water:
        data: { source: osm, layer: water }
        draw:
            waves:
                interactive: true
                order: 5
                color: [0.860, 0.860, 0.860]
        later:
            filter: { $zoom: { min: 14 } }
            draw:
                waves2:
                    color: [0.780, 0.780, 0.780]
                    order: 6

        lakes:
            filter: 
                all:
                    - kind: [ocean, lake, water, riverbank, reservoir, swimming_pool]
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 1 },  area: { min: 40000000000 } }
                    - { $zoom: { min: 2 },  area: { min: 20000000000 } }
                    # some weird natural earth scale set transition
                    - { $zoom: { min: 3 },  area: { min: 80000000000 } }
                    - { $zoom: { min: 4 },  area: { min: 5000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 700000000 } }
                    - { $zoom: { min: 6 },  area: { min: 500000000 } }
                    - { $zoom: { min: 7 },  area: { min: 160000000 } }
                    - { $zoom: { min: 8 },  area: { min: 40000000 } }
                    - { $zoom: { min: 9 },  area: { min: 10000000 } }
                    - { $zoom: { min: 10 }, area: { min: 8000000 } }
                    - { $zoom: { min: 11 }, area: { min: 2000000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 2000 } }
                    - { $zoom: { min: 15 } }
            draw:
                waves:
                    color: [0.860, 0.860, 0.860]

        other-water-areas:
            filter: { not: { kind: [ocean, lake, water, reservoir, playa] }, $zoom: { min: 11 }, area: { min: 100 } }
            draw:
                waves:
                    color: [0.860, 0.860, 0.860]
        playas:
            filter: { kind: playa, $zoom: {min: 6} }
            draw:
                waves:
                    color: [0.860, 0.860, 0.860]
        water-boundary-ocean-early:
            filter: { boundary: yes, kind: ocean, $zoom: {min: 1, max: 17} }
            draw:
                coast:
                    order: 5
                    color: [[1,[0.70,0.70,0.70]],[5,[0.60,0.60,0.60]],[6,[0.50,0.50,0.50]]]
                    width: [[2, 1.0px],[6, 1px], [7, 2px],[10, 2px], [14, 2px]]
                    join: round
        water-boundary-ocean-late:
            filter: { boundary: yes, kind: ocean, $zoom: {min: 17} }
            draw:
                coast:
                    order: 5
                    color: [0.661, 0.661, 0.661]
                    width: [[14, 4px],[17, 4px],[20, 10px]]
                    join: round
        water_boundaries-not-ocean:
            filter: { boundary: yes, not: { kind: ocean }, $zoom: { min: 8 } }
            draw:
                coast:
                    order: 5
                    color: [[6, [0.900, 0.900, 0.900]], [10, [0.761, 0.761, 0.761]],[11,[0.50,0.50,0.50]]]
                    width: [[6,0.75px], [10,1.0px], [14,2.0px], [15,2.0px], [16,3.0px]]
                    join: round
            early:
                filter: { $zoom: { min: 14 } }
                draw:
                    lines: { order: 19 }
            riverbank:
                # river boundaries like the thames in london, la seine in paris
                filter: { kind: riverbank }
                draw:
                    coast:
                        # color: [0.397,0.743,0.809]
                        color: [0.200, 0.200, 0.200]
                        width: [[9,0.5px],[10,0.75px],[11,1px],[14,1px],[15,2px],[17,2px]]
        river:
            #river center lines, not boundaries for polygons
            filter: { kind: [river,canal,stream,dam,ditch,drain], $zoom: { min: 14 } }
            draw:
                stream-waves:
                    interactive: true
                    color: [0.840,0.840,0.840]
                    order: 3
                    width: [[14,0.5px],[15,2.0px],[17,6.0px],[18,8.0px]]
                    cap: round

    railway-early:
        data: { source: osm, layer: transit }
        filter: { kind: [railway,subway,light_rail], $zoom: { min: 14 } }
        draw:
            lines:
                interactive: true
                order: function() { return 6 + feature.sort_key; }
        rail:
            filter: { kind: railway }
            draw:
                lines: 
                    color: grey
                    width: [[14,1px],[16,2px],[18,5m]]
        subway:
            filter: { kind: subway }
            draw:
                lines: 
                    color: black
                    width: [[14,0.5px],[16,1px],[18,3m]]
        light_rail:
            filter: { kind: light_rail, $zoom: { min: 15 } }
            draw:
                lines: 
                    color: grey
                    order: 30

    railway-late:
        data: { source: osm, layer: roads }
        filter: { kind: rail, not: { railway: light_rail } }
        draw:
            lines:
                interactive: true
                color: [[14,'#bbb'],[16,'#999']]
                width: [[15,0.5px],[16,0.75px],[18,1m]]
        z-order:
            #filter: { $zoom: {min: 12} }
            draw:
                lines:
                    # let roads sort themselves past zoom 14
                    order: function() { return 6 + feature.sort_key; }
                    # but give them all the same outline
                    outline:
                        order: 21 # 15 is the starting aboveground level, plus 6

            bridges-tunnels:
                filter: { any: [is_bridge: yes, is_tunnel: yes] }
                draw:
                    lines:
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 6 + feature.sort_key; }

    roads:
        data: { source: osm, layer: roads }
        filter: { not: { kind: rail } }
        draw:
            lines:
                interactive: true
                #color: black
                width: 1px
            text:
                visible: false    # labels are enabled by each layer below
                font:
                    family: Helvetica
                    weight: 500

        # default outlines starting at zoom 16
        default-outline-width:
            filter: { $zoom: { min: 16 } }
            draw:
                lines:
                    outline:
                        width: function () { return 3/16 * Math.log($zoom); }

        natural_earth_highways:
            filter: { source: 'naturalearthdata.com' }
            draw:
                lines:
                    # put highways on top of all other roads
                    order: 8
                    color: black
                    width: [[5, 1px], [7, 1.25px], [9, 1.5px], [14, 1.5px], [16, 4px], [17, 10m]]
                    outline:
                        color: *highway_casing1
                        width: [[9, 0px], [10, 0px], [12, 1px], [16, 2px]]
            major_road:
                filter: { type: ['Secondary Highway','Road'] }
                draw:
                    lines:
                        color: [[5, [0.5,0.5,0.5]], [8, [0.4,0.4,0.4]], [13, [0.4,0.4,0.4]], [17, *major_road1]]
                        #color: red
                        width: [[5, 0.25px], [7, 0.5px], [7, 0.75px], [9, 1px], [10, 9px], [11, 9px], [13, 1px], [16, 2.5px], [19, 8m]]
                        outline:
                            width: [[8, 0.0px], [9, 0.0px], [11, .5px], [16, .75px]]
            minor_road:
                filter: { type: 'Unknown' }
                draw:
                    lines:
                        # order: 3
                        color: [[12, *minor_road1], [17, *minor_road2]]
                        width: [[12, 1.0px], [14, 1.5px], [15, 3px], [16, 5m]]
                        outline:
                            width: [[12, 0px], [14, .5px], [17, 1px]]
            ferry:
                filter: { kind: Ferry }
                draw:
                    lines:
                        # order: 3
                        color: *ferry1
                        width: [[12, 0.5px], [13, 0.75px], [15, 1.0px]]
                        outline:
                            width: 0px
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    # put highways on top of all other roads
                    order: 8
                    color: [[8, [0.0,0.0,0.0]], [9, [0.0,0.0,0.0]], [10, [0.0,0.0,0.0]], [11, [0.0,0.0,0.0]], [13, [0.0,0.0,0.0]], [14, [0.0,0.0,0.0]], [15, [0.0,0.0,0.0]], [16, [0.0,0.0,0.0]], [17, [0.0,0.0,0.0]]]
                    width: [[8, 1px], [10, 1.15px], [11, 1px], [12, 1px], [14, 1.75px], [15, 3px], [16, 4px], [17, 4px]]
                    outline:
                        color: *highway_casing1
                        width: 0px
            not_link:
                filter: { not: { is_link: yes }, $zoom: {max: 15} }
                draw:
                    lines:
                        order: function() { return 7 + feature.sort_key; }
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 7 + feature.sort_key; }
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        #color: *highway_link1
                        color: [[9, [0.0,0.0,0.0]], [11, [0.0,0.0,0.0]], [12, [0.0,0.0,0.0]], [14, [0.3,0.3,0.3]], [15, [0.1,0.1,0.1]], [16, [0.1,0.1,0.1]], [17, [0.0,0.0,0.0]]]
                        width: [[9, 0px], [11, 0.15px], [12, 0.5px], [13, 0.75px], [14, 0.75px], [15, 1.5px], [16, 1.75px], [17, 1.75px], [18, 1.75px]]
                        outline:
                            color: *highway_casing1
                            width: [[9, 0px], [10, 0px], [12, 0px], [13, 0px], [14, 0px], [15, 0px], [17, 0px], [18, 0px]]
                early_link:
                    filter: { $zoom: {min: 13, max: 15} }
                    draw:
                        lines:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 7 + feature.sort_key; }
                tunnel-link:
                    filter: {is_tunnel: yes, $zoom: {min: 13} }
                    draw:
                        lines:
                            color: *highway_tunnel1
                            outline:
                                color: *highway_tunnel_casing1
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        color: [[13,*highway_tunnel1], [14,*highway_tunnel1], [15,[0.8,0.8,0.8]], [16,[0.85,0.85,0.85]]]
                        outline:
                            color: *highway_tunnel_casing1
                            width: 0px
            highway_bridge:
                filter: {is_bridge: yes}
                draw:
                    lines:
                        cap: butt
            labels-highway-early:
                filter: { $zoom: { min: 7, max: 13 } }
                draw:
                    text:
                        priority: 2
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: *text_fill
                            size: 9px
                            stroke: { color: *text_stroke, width: 4 }
            labels-highway-late:
                filter: { $zoom: { min: 13, max: 14 } }
                draw:
                    text:
                        priority: 2
                        visible: *text_visible_highway
                        #text_source: ref
                        text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            size: 10px
                            stroke: { color: *text_stroke, width: 4 }
            labels-highway-late2:
                filter: { $zoom: { min: 14, max: 15 } }
                draw:
                    text:
                        priority: 2
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill
                            size: 10px
                            stroke: { color: *text_stroke, width: 4 }
            labels-highway-late3:
                filter: { $zoom: { min: 15, max: 18 } }
                draw:
                    text:
                        priority: 2
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill
                            size: 15px
                            stroke: { color: *text_stroke, width: 4 }
            later3:
                filter: { $zoom: { min: 18 } }
                draw:
                    text:
                        priority: 2
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill2
                            size: 18px
                            stroke: { color: *highway1, width: 4 }

        major_road:
            filter: { kind: major_road }
            # default style
            draw:
                lines:
                    color: [[8, *major_road4], [13, major_road2], [17, *major_road1]]
                    width: [[13, 1px], [14, 1px], [16, 2.5px], [19, 8m]]
                    outline:
                        width: [[12, 0px], [13, .5px], [15, 1px]]
            trunk_primary:
                filter: { highway: [trunk, primary] }
                draw:
                    lines:
                        color: [[8, [0.8,0.8,0.8]], [10, [0.8,0.8,0.8]], [12, [0.5,0.5,0.5]], [13, [0.4,0.4,0.4]], [14, [0.3,0.3,0.3]], [15, [0.1,0.1,0.1]], [16, [0.0,0.0,0.0]], [17, [0.0,0.0,0.0]]]
                        width: [[9, 0.5px], [11, 0.5px], [12, 0.75px], [13, 0.75px], [14, 1px], [15, 1.25px], [16, 3px], [17, 3px], [18, 3px]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: 2px
                routes:
                    filter: { ref: true }
                    draw:
                        lines:
                            color: [[8, [0.5,0.5,0.5]], [11, [0.65,0.65,0.65]], [12, [0.2,0.2,0.2]], [13, [0.4,0.4,0.4]], [14, [0.0,0.0,0.0]], [15, [0.0,0.0,0.0]], [16, [0.0,0.0,0.0]], [17, [0.0,0.0,0.0]]]
                            width: [[9, 0.5px], [10, 0.65px], [11, 0.65px], [12, 0.65px], [13, 0.65px], [14, 1.25px], [15, 1.25px], [16, 3px], [17, 3px], [18, 3px]]
                            outline:
                                color: [1.0,1.0,1.0]
                                width: 2px
                    national-routes:
                        filter: { network: [US:US, US:I] }
                        draw:
                            lines:
                                color: *major_route1
                                #color: [[8,*major_route2],[9,major_route2],[10,*major_route1]]
                                width: [[8, 1px], [10, 1.15px], [11, 1px], [12, 1px], [14, 1.75px], [15, 3px], [16, 4px], [17, 4px]]
                                outline:
                                    color: [1.0,1.0,1.0]
                                    width: 2px
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: [1.0,1.0,1.0]
                    z-order:
                        #filter: { $zoom: {min: 12} }
                        draw:
                            lines:
                                # let roads sort themselves past zoom 14
                                order: function() { return 8 + feature.sort_key; }
                                # but give them all the same outline
                                outline:
                                    order: 23 # 15 is the starting aboveground level, plus 8
                labels-trunk_primary-early1:
                    filter: { $zoom: { min: 11, max: 13 } }
                    draw:
                        text:
                            priority: 3
                            visible: *text_visible_trunk_primary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.35,0.35,0.35]
                                size: 8px
                                stroke: { color: *text_stroke, width: 3 }
                labels-trunk_primary-early2:
                    filter: { $zoom: [13] }
                    draw:
                        text:
                            priority: 3
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.35,0.35,0.35]
                                size: 8px
                                stroke: { color: *text_stroke, width: 4 }
                labels-trunk_primary-early3:
                    filter: { $zoom: [14] }
                    draw:
                        text:
                            priority: 3
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.35,0.35,0.35]
                                size: 9px
                                stroke: { color: *text_stroke, width: 4 }
                labels-trunk_primary-late:
                    filter: { $zoom: { min: 15, max: 18 } }
                    draw:
                        text:
                            priority: 3
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                labels-trunk_primary-late2:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text:
                            priority: 3
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 18px
                                stroke: { color: *text_stroke, width: 4 }
                                #fill: *text_fill2
                                #size: 18px
                                #stroke: { color: *major_road1, width: 4 }
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        color: [[10, [0.4,0.4,0.4]], [14, [0.75,0.75,0.75]], [15, [0.89, 0.89, 0.89]], [16, [0.1,0.1,0.1]], [17, [0.0,0.0,0.0]]]
                        width: [[10, 0.5px], [14, 1.5px], [15, 1px], [16, 1.75px], [17, 1.5px], [18, 1.5px]]
                        outline:
                            color: *major_casing1
                            width: [[10, 0px], [14, 0px], [15, 0px], [16, 0px], [17, 0px], [18, 0px]]
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        color: *major_tunnel1
                        outline:
                            color: *major_tunnel_casing1
            secondary:
                filter: { highway: secondary }
                draw:
                    lines:
                        color: [[10, [0.75,0.75,0.75]], [11, [0.8,0.8,0.8]], [12, [0.6,0.6,0.6]], [13, [0.4,0.4,0.4]], [14, [0.35,0.35,0.35]], [15, [0.35,0.35,0.35]], [17, [0.0,0.0,0.0]]]
                        width: [[10, 0.5px], [12, 0.5px], [13, 0.65px], [14, 1px], [15, 1.25px], [16, 2px], [17, 2px], [18, 2px]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: 2px
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [[12, [0.6,0.6,0.6]], [13, [0.4,0.4,0.4]], [14, [0.35,0.35,0.35]], [15, [0.35,0.35,0.35]], [16, [0.35,0.35,0.35]], [17, [0.0,0.0,0.0]]]
                            width: [[11, 0.5px], [12, 0.5px], [13, 0.65px], [14, 1px], [15, 1.25px], [16, 2px], [17, 2px], [19, 16m]]
                            outline:
                                width: 2px
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-secondary-routes:
                        filter: { $zoom: { min: 13, max: 14 } }
                        draw:
                            text:
                                priority: 4
                                visible: *text_visible_secondary_e
                                text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 13px
                                    stroke: { color: *text_stroke, width: 4 }
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[10, [0.75,0.75,0.75]], [11, [0.8,0.8,0.8]], [12, [0.6,0.6,0.6]], [13, [0.4,0.4,0.4]], [14, [0.35,0.35,0.35]], [15, [0.35,0.35,0.35]], [17, [0.0,0.0,0.0]]]
                            outline:
                                color: [1.0,1.0,1.0]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                labels-secondary:
                    filter: { $zoom: [13] }
                    draw:
                        text:
                            priority: 4
                            visible: *text_visible_secondary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.35,0.35,0.35]
                                size: 8px
                                stroke: { color: *text_stroke, width: 4 }
                labels-secondary1:
                    filter: { $zoom: [14] }
                    draw:
                        text:
                            priority: 4
                            visible: *text_visible_secondary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.35,0.35,0.35]
                                size: 9px
                                stroke: { color: *text_stroke, width: 4 }
                labels-secondary2:
                    filter: { $zoom: { min: 15, max: 18 } }
                    draw:
                        text:
                            priority: 4
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                labels-secondary3:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text:
                            priority: 4
                            visible: *text_visible_secondary
                            #text_source: ref
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 16px
                                stroke: { color: *text_stroke, width: 4 }
                                #fill: *text_fill2
                                #size: 16px
                                #stroke: { color: *major_road1, width: 4 }
            tertiary:
                filter: { highway: [tertiary, tertiary_link] }
                draw:
                    lines:
                        color: [[11, [0.885,0.885,0.885]], [13, [0.6,0.6,0.6]], [14, [0.75,0.75,0.75]], [15, [0.6,0.6,0.6]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                        width: [[11, 0.5px], [12, .75px], [13, 0.65px], [14, 1px], [15, 1px], [16, 2px], [17, 2px], [18, 2px]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: 2px
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [[11, [0.885,0.885,0.885]], [13, [0.8,0.8,0.8]], [14, [0.75,0.75,0.75]], [15, [0.6,0.6,0.6]], [17, [0.0,0.0,0.0]]]
                            width: [[11, 0.5px], [12, .75px], [13, 1px], [14, 1px], [15, 1px], [16, 2px], [17, 2px], [18, 2px]]
                            outline:
                                color: [1.0,1.0,1.0]
                                width: 2px
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                link:
                    filter: { is_link: yes } # on- and off-ramps, etc
                    draw:
                        lines:
                            color: [[14, [0.75,0.75,0.75]], [15, [0.6, 0.6, 0.6]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                            width: [[11, 0.0px], [12, 0.15px], [14, 0.15px], [15, 0.75px], [16, 1.25px], [17, 1.25px], [18, 1.25px]]
                            outline:
                                width: 0px
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[11, [0.885,0.885,0.885]], [13, [0.6,0.6,0.6]], [14, [0.75,0.75,0.75]], [15, [0.6,0.6,0.6]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                            outline:
                                color: [1.0,1.0,1.0]
                                width: 2px
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: [1.0,1.0,1.0]
                labels-tertiary:
                    filter: { $zoom: [13] }
                    draw:
                        text:
                            priority: 5
                            visible: *text_visible_tertiary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 8px
                                stroke: { color: *text_stroke, width: 4 }
                labels-tertiary1:
                    filter: { $zoom: [14] }
                    draw:
                        text:
                            priority: 5
                            visible: *text_visible_tertiary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.35,0.35,0.35]
                                size: 9px
                                stroke: { color: *text_stroke, width: 4 }
                labels-tertiary2:
                    filter: { $zoom: { min: 15, max: 18 } }
                    draw:
                        text:
                            priority: 5
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                labels-tertiary3:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text:
                            priority: 5
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 15px
                                stroke: { color: *text_stroke, width: 4 }
                                #fill: *text_fill2
                                #size: 15px
                                #stroke: { color: *major_road1, width: 4 }
        minor_road:
            filter: { kind: minor_road, not: { highway: service, aeroway: [runway, taxiway] } }
            draw:
                lines:
                    # order: 3
                    color: [[11, [0.885,0.885,0.885]], [13, [0.8,0.8,0.8]], [14, [0.75,0.75,0.75]], [15, [0.5,0.5,0.5]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                    width: [[11, 0.35px], [13, 0.5px], [14, 1px], [15, 1px], [16, 2px], [18, 2px]]
                    outline:
                        color: [1.0,1.0,1.0]
                        width: [[11, 2px], [17, 4px]]
            early:
                filter: { $zoom: { max: 14 } }
                draw:
                    lines:
                        order: 15

            in_park:
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        color: [[11, [0.885,0.885,0.885]], [13, [0.75,0.75,0.75]], [14, [0.70,0.70,0.70]], [15, [0.6,0.6,0.6]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[11, 1px], [14, 2px], [15, 3px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[11, [0.885,0.885,0.885]], [13, [0.8,0.8,0.8]], [14, [0.75,0.75,0.75]], [15, [0.6,0.6,0.6]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[11, 1px], [14, 2px], [15, 3px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[11, [0.885,0.885,0.885]], [13, [0.8,0.8,0.8]], [14, [0.75,0.75,0.75]], [15, [0.6,0.6,0.6]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[11, 1px], [14, 2px], [15, 3px]]

            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        #cap: butt
                        color: *minor_tunnel1
                        outline:
                            color: *minor_tunnel_casing1
            #minor_road_bridge:
#                filter: {is_bridge: yes}
#                draw:
#                    lines:
#                        cap: butt
            labels-minor_road:
                filter: { $zoom: { min: 16, max: 18 } }
                draw:
                    text:
                        priority: 6
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
            labels-minor_road2:
                filter: { $zoom: { min: 18 } }
                draw:
                    text:
                        priority: 6
                        visible: *text_visible_minor_road
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 15px
                            stroke: { color: *text_stroke, width: 4 }
                            #fill: *text_fill2
                            #size: 15px
                            #stroke: { color: *minor_road3, width: 4 }
        service_road:
            filter: { kind: minor_road, highway: service }
            draw:
                lines:
                    # order: 3
                    color: [[14, [0.75,0.75,0.75]], [15, [0.6, 0.6, 0.6]], [16, [0.3,0.3,0.3]], [18, [0.3,0.3,0.3]]]
                    width: [[14, 0.15px], [15, 0.75px], [16, 1.25px], [17, 1.25px], [18, 1.25px]]
                    outline:
                        color: [1.0,1.0,1.0]
                        width: [[14, 0.5px], [17, 2.0px]]
            in_park:
                filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        color: [[14, [0.75,0.75,0.75]], [15, [0.6, 0.6, 0.6]], [16, [0.3,0.3,0.3]], [18, [0.3,0.3,0.3]]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
            in_cemetery:
                filter: { landuse_kind: cemetery }
                draw:
                    lines:
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            labels-service_road:
                filter: { $zoom: { min: 17, max: 18 } }
                draw:
                    text:
                        priority: 7
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
            labels-service_road2:
                filter: { $zoom: { min: 18 } }
                draw:
                    text:
                        priority: 7
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                            #fill: *text_fill2
                            #size: 12px
                            #stroke: { color: *service_road2, width: 4 }
        path:
            filter: { kind: path, not: { highway: steps } }
            draw:
                lines:
                    color: [[15, [0.6,0.6,0.6]], [16, [0.6,0.6,0.6]], [18, [0.6,0.6,0.6]]]
                    width: [[15, 0.5px], [16, 0.5px], [17, 0.5px], [18, 0.5px]]
                    outline:
                        color: [1.0,1.0,1.0]
                        width: [[15, 2px], [17, 4px]]

            bridge:
                filter: {is_bridge: yes }
                draw:
                    lines:
                        width: [[15, 0.5px], [16, 0.5px], [17, 0.5px]]
                        outline:
                            color: [[15,*path_bridge_casing2],[16,*path_bridge_casing1]]
                            width: [[15, 0px], [16, 0px], [17, 0px], [18, 1px]]
            in_park:
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        color: [[15, [0.6,0.6,0.6]], [16, [0.6,0.6,0.6]], [18, [0.6,0.6,0.6]]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[15, 2px], [16, 3px], [18, 5px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: [1.0,1.0,1.0]
            in_cemetery:
                filter: { landuse_kind: cemetery }
                draw:
                    lines:
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[15, 2px], [16, 3px], [18, 5px]]
            in_zoo:
                filter: { landuse_kind: zoo }
                draw:
                    lines:
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[15, 2px], [16, 3px], [18, 5px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[15, [0.6,0.6,0.6]], [16, [0.6,0.6,0.6]], [18, [0.6,0.6,0.6]]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[15, 2px], [16, 3px], [18, 5px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[15, [0.6,0.6,0.6]], [16, [0.6,0.6,0.6]], [18, [0.6,0.6,0.6]]]
                        outline:
                            color: [1.0,1.0,1.0]
                            width: [[15, 0px], [16, 0.5px], [18, 2px]]
            labels-path:
                filter: { $zoom: { min: 17 } }
                draw:
                    text:
                        priority: 8
                        visible: *text_visible_path
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
        steps:
            filter: { kind: path, highway: steps }
            draw:
                dashedline:
                    order: 23
                    color: [1.0,1.0,1.0]
                    width: [[15, 0.5], [16, 0.75px], [17, 1px], [18, 2px]]
                    outline:
                        color: *path_steps1
                        width: 0px
            in_park:
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    dashedline:
                        color: *path_steps1_b
                        outline:
                            color: [1.0,1.0,1.0]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    dashedline:
                        color: *path_steps1_b
                        outline:
                            color: [1.0,1.0,1.0]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    dashedline:
                        color: *path_steps1_b
                        outline:
                            color: [1.0,1.0,1.0]
            labels-steps:
                filter: { $zoom: { min: 17 } }
                draw:
                    text:
                        priority: 9
                        visible: *text_visible_steps
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
        airport-lines:
            filter: { kind: minor_road, aeroway: [runway,taxiway] }
            draw:
                lines:
                    order: 10
                    color: [[11, [0.25,0.25,0.25]], [17, [0.0,0.0,0.0]]]
                    cap: butt
                    width: [[10, 1px], [11, 1.5px], [12, 2px], [13, 4px], [14, 8px], [15, 16px], [16, 32px], [17, 60m]]
                    outline:
                        color: [1.0,1.0,1.0]
            # Features come in at zoom 9, but include mostly minor airports without POIs until z13
            early:
                filter: { $zoom: { max: 12 }, not: { landuse_kind: [aerodrome, runway, taxiway] } }
                draw:
                    lines:
                        visible: false
            not-round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: butt
            taxiway:
                filter: { aeroway: taxiway }
                draw:
                    lines:
                        order: 9
                        color: [[14, [0.75,0.75,0.75]], [15, [0.6,0.6,0.6]], [16, [0.3,0.3,0.3]], [17, [0.0,0.0,0.0]]]
                        width: [[14, 1px], [17, 1.5px], [18, 4m]]
                        outline:
                            width: 0.5px
                            color: [1.0,1.0,1.0]
                early:
                    filter: { $zoom: { max: 14 } }
                    draw:
                        lines:
                            visible: false
        ferry:
            filter: { kind: ferry }
            draw:
                lines:
                    # order: 3
                    color: [[12, *ferry1], [13, [0.80,0.80,0.80]]]
                    width: [[12, 0.5px], [13, 0.75px], [15, 1.0px]]
        z-order:
            #filter: { $zoom: {min: 12} }
            draw:
                lines:
                    # let roads sort themselves past zoom 14
                    order: function() { return 6 + feature.sort_key; }
                    # but give them all the same outline
                    outline:
                        order: 21 # 15 is the starting aboveground level, plus 6

            bridges-tunnels:
                filter: { any: [is_bridge: yes, is_tunnel: yes] }
                draw:
                    lines:
                        #cap: butt
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 6 + feature.sort_key;

    buildings:
        data: { source: osm, layer: buildings }

        filter:
            not: { location: underground }

        # set default footprint and extrusion draw properties, but don't draw by default (rules below will turn visibility on)
        draw:
            polygons:
                visible: false
                order: 50
                color: [1.000, 1.000, 1.000]
            lines:
                visible: false
                style: lines
                order: 51
                color: [[14, [0.8,0.8,0.8]], [15, [0.78,0.78,0.78]], [16, [0.700,0.700,0.700]],[17, [0.65,0.65,0.65]]]
                width: [[14,0.3px],[15,0.5px],[16,0.75px],[18,0.75px]]

        # turn interactive feature selection on for buildings with names
        interactive:
            filter: { name: true }
            draw: { polygons: { interactive: true } }

        # building footprints, pre-extrusion
        footprints:
            filter:
                $zoom: { max: 18 }
                any:
                    # show footprints for buildings at least one zoom level before they will be extruded
                    - { $zoom: [13], area: { min: 50000 } }
                    - { $zoom: [13], height: { min: 250 } }
                    - { $zoom: [13], volume: { min: 200000 } }
                    - { $zoom: [14], area: { min: 5000 } }
                    - { $zoom: [14], height: { min: 190 } }
                    - { $zoom: [14], volume: { min: 150000 } }
                    - { $zoom: [15], height: { min: 100 } }
                    - { $zoom: [15], area: { min: 500 } }
                    - { $zoom: [15], volume: { min: 100000 } }
                    - { $zoom: [16], area: { min: 100 } }
                    - { $zoom: [16], volume: { min: 50000 } }
                    - { $zoom: { min: 17 } }
            draw:
                polygons:
                    visible: true
                lines:
                    visible: true

        # 3d buildings
        extrude:
            filter:
                any:
                    - { $zoom: [15], height: { min: 190 } }
                    - { $zoom: [15], area: { min: 5000 } }
                    - { $zoom: [15], volume: { min: 100000 } }
                    - { $zoom: [16], height: { min: 100 } }
                    - { $zoom: [16], area: { min: 3500 } }
                    - { $zoom: [16], volume: { min: 50000 } }
                    - { $zoom: [17], area: { min: 500 } }
                    - { $zoom: [17], volume: { min: 15000 } }
                    - { $zoom: { min: 18 } }
            draw:
                polygons:
                    visible: true
                    style: building-grid
                    extrude: function() { return feature.height || 20; }
                    color: [1.0, 1.0, 1.0]
                lines:
                    visible: true
                    style: building-lines
                    extrude: function() { return feature.height || 20; }

        # landuse-specific rules
        in_park:
            filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
            draw:
                polygons:
                    color: [1.0,1.0,1.0]

            # golf_course:
            #     filter: { landuse_kind: golf_course }
            #     draw:
            #         polygons:
            #             color: *building2
            # nature_reserve:
            #     filter: { landuse_kind: nature_reserve }
            #     draw:
            #         polygons:
            #             color: *building2
            # conservation:
            #     filter: { landuse_kind: conservation }
            #     draw:
            #         polygons:
            #             color: *building2
            # zoo:
            #     filter: { landuse_kind: zoo }
            #     draw:
            #         polygons:
            #             color: *building2
        in_university:
            filter: { landuse_kind: [university,school] }
            draw:
                polygons:
                    color: [1.0,1.0,1.0]
        in_hospital:
            filter: { landuse_kind: hospital }
            draw:
                polygons:
                    color: [1.0,1.0,1.0]
        in_retail:
           filter: { landuse_kind: retail }
           draw:
                polygons:
                    color: [1.0,1.0,1.0]

    building-labels:
        data: { source: osm, layer: buildings }
        filter: 
            all:
                - { $zoom: { min: 16 } }
                - $geometry: point
                - kind: [false,building]
                - not: { location: underground }
            any:
                # limit show smaller landuse areas to higher zooms
                # - { $zoom: { min: 14 }, area: { min: 40000 }, name: true }
                # - { $zoom: { min: 15 }, area: { min: 5000 }, name: true }
                - { $zoom: { min: 16 }, area: { min: 5000 }, name: true }
                - { $zoom: { min: 17 }, area: { min: 3000 }, name: true }
        draw:
            text:
                interactive: true
                order: 7
                visible: *text_visible_building
                font:
                    fill: *text_fill
                    family: Helvetica
                    style: italic
                    size: 12px
                    stroke: { color: *building2, width: 4 }
        # Hack for no text wrap in Tangram
        building-labels-z16:
            filter: function() { if( $zoom == 16 && feature.name.length > 10 ) { return true; } else { return false; } }
            text:
                visible: false
        building-labels-z17:
            filter: function() { if( $zoom == 17 && feature.name.length > 20 ) { return true; } else { return false; } }
            text:
                visible: false
        building-labels-z20+:
            filter: { $zoom: { min: 20 } }
            draw:
                text:
                    text_source: function() { if( feature.addr_housenumber /*&& !feature.name.indexof(feature.addr_housenumber) > -1*/) { return feature.name + '\n' + feature.addr_housenumber; } else { return feature.name; } }
    address-labels:
        data: { source: osm, layer: buildings }
        filter: 
            all:
                - { $zoom: { min: 20 }, kind: address }
                - { $zoom: { min: 20 }, [ kind: true, addr_housenumber: true, name: false ] }
        draw:
            text:
                interactive: true
                order: 7
                visible: *text_visible_address
                text_source: addr_housenumber
                font:
                    fill: *text_fill_building
                    family: Helvetica
                    style: italic
                    size: 10px
                    stroke: { color: *building1, width: 4 }

    boundaries:
        data: { source: osm, layer: boundaries }
        # country subdivisions (states, provinces)
        draw:
            lines:
                interactive: true
                order: 6
#                color: red
#                width: [[9, 1px], [14, 2px], [16, 3px], [17, 8m]]
        country:
            filter: 
                any:
                    - type: country
                    - kind: nation
                    - admin_level: 2
            draw:
                lines:
                    interactive: true
                    order: 8
                    color: *country_boundary
                    width: [[0, 0.5px], [9, 2.5px], [14, 3.5px], [16, 4.5px], [17, 14m]]
            water:
                filter: { maritime: yes }
                draw:
                    lines:
                        order: 9
                        color: blue

        region:
            filter: 
                any:
                    - type: state
                    # territorial here is probably a hack
                    - kind: [state, department, region, provincial, territorial]
                    - admin_level: 4
            draw:
                lines:
                    interactive: true
                    order: 7
                    color: *region_boundary
                    width: [[0, 0.5px], [9, 3.5px], [14, 5.5px], [16, 6.5px], [17, 16m]]
            water:
                filter: { maritime_boundary: yes }
                draw:
                    lines:
                        visible: false
            early:
                filter: { scalerank: [0,3,4,5,6,7,8,9,10], $zoom: { max: 8 } }
                draw:
                    lines:
                        visible: false

#        subregions:
#            filter: { kind: county, $zoom: { min: 10 } }
#            draw:
#                lines:
#                    interactive: true
#                    order: 6
#                    color: *subregion_boundary
#                    width: [[9, 1px], [14, 2px], [16, 3px], [17, 8m]]


    places:
        data: { source: osm, layer: places }
        filter: { not: { kind: [ocean, sea] } }
        draw:
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                font:
                    family: *text_font_family
                    # weight: 500
                    fill: *text_fill

        continent:
            filter: { name: true, kind: [continent], $zoom: {max: 5} }
            draw:
                text-blend-order:
                    visible: *text_visible_continent
                    font:
                        size: 13px
                        style: italic
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase

        country-z2:
            filter:
                all:
                    - kind: [country]
                    - $zoom: [2]
                    - name: ["United States of America","Brasil","中华人民共和国","Россия","Canada","Kalaallit Nunaat","Ísland","Australia","India","日本","Guam","Indonesia","South Africa","مصر","Nigeria","Kenya"]
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: *text_fill
                        weight: 200
                        size: 11px
                        stroke: { color: *text_stroke, width: 4 }
        country-z3:
            filter: { name: true, population: true, kind: [country], $zoom: [3] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: *text_fill
                        weight: 200
                        size: 11px
                        stroke: { color: *text_stroke, width: 4 }
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones:
                # US, Brazil, China, Russia, Canada, Greenland, Iceland, Australia, India, Japan, Guam, Indonesia, South Africa, Egypt, Nigeria, Kenya
                filter: { not: { name: ["United States of America","Brasil","中华人民共和国","Россия","Canada","Kalaallit Nunaat","Ísland","Australia","India","日本","Guam","Indonesia","South Africa","مصر","Nigeria","Kenya"] }, $zoom: {min: 3, max: 4} }
                draw:
                    text-blend-order:
                        visible: false
        country-z4:
            filter: { name: true, population: true, kind: [country], $zoom: [4] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: *text_fill
                        weight: 200
                        size: 11px
                        stroke: { color: *text_stroke, width: 4 }
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones-z4:
                filter: { name: [Nederland,Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,Crna Gora,Македонија,The Gambia,Burundi,Swaziland,الإمارات العربية المتحدة,العراق,Singapore,El Salvador,Belize,Trinidad and Tobago, Saint Lucia, Montserrat,Anguilla,República Dominicana,Bahamas,British Virgin Islands,Antigua and Barbuda,Grenada,Sint Maarten,Saint Kitts and Nevis,Cayman Islands,België - Belgique - Belgien], $zoom: {min: 4, max: 5} }
                draw:
                    text-blend-order:
                        visible: false
        country-z5:
            filter:
                all:
                    - name: true
                    - population: true
                    - kind: [country]
                    - $zoom: [5]
                any:
                    - { population: { min: 5000000 } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: *text_fill
                        weight: 400
                        size: 11px
                        stroke: { color: *text_stroke, width: 4 }
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones-z5:
                filter: { name: [Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,El Salvador,Belize,België - Belgique - Belgien], $zoom: {min: 5, max: 6} }
                draw:
                    text-blend-order:
                        visible: false
        country-z6:
            # South Ossetia and Abkhazia aren't countries (they are disputed areas)
            filter: { name: true, kind: [country], $zoom: [6] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 14px
                        weight: 600
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
            small-ones-z6:
                filter: { name: [Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,België - Belgique - Belgien,Хуссар Ирыстон,Аҧсны - Абхазия], $zoom: {min: 6, max: 7} }
                draw:
                    text-blend-order:
                        visible: false

        country-z7:
            # South Ossetia and Abkhazia aren't countries (they are disputed areas)
            filter: { name: true, kind: [country], $zoom: { min: 7, max: 9 } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 16px
                        weight: 700
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
            small-ones-z7:
                filter: { name: [Liechtenstein,San Marino,Civitatis Vaticanæ,Хуссар Ирыстон,Аҧсны - Абхазия], $zoom: {min: 7, max: 8} }
                draw:
                    text-blend-order:
                        visible: false

        region-z4:
            filter: { name: true, kind: [state], $zoom: [4], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 12px
                        weight: 400
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }

        region-z5:
            filter: { name: true, kind: [state], $zoom: [5], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 12px
                        weight: 400
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }

        region-z6:
            filter: { name: true, kind: [state], $zoom: [6], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 14px
                        weight: 800
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase

        region:
            filter: { name: true, kind: [state], $zoom: {min: 7, max: 9} }
            draw:
                text-blend-order:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: function() { if(feature["name:short"]) { return feature["name"]; } else { return ""; } }
                    font:
                        size: 14px
                        weight: 800
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            pesky:
                filter: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"], $zoom: {min: 7, max: 8} }
                draw:
                    text-blend-order:
                        visible: false
            small-ones:
                filter: { name: ["Delaware","New Jersey","Connecticut","Rhode Island","Massachusetts","New Hampshire","Vermont"], $zoom: {min: 7, max: 8} }
                draw:
                    text-blend-order:
                        text_source: function() { return feature["name:abbreviation"] || feature["name"]; }
                        font: { transform: uppercase }

        populated-places:
            draw:
                icons:
                    interactive: true
                    priority: 5
                text-blend-order:
                    interactive: true
                    anchor: bottom
                    priority: 6
                    offset: [0, 5px]

            populated-places-natural-earth-z2:
                filter: { name: true, source: naturalearthdata.com, $zoom: [2], scalerank: 0 }
                draw:
                    text-blend-order:
                        visible: *text_visible_populated_places
                        # offset: [0, 1px] # half icon size
                        font:
                            size: 10px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 4 }
                    icons:
                        size: 5px
                        visible: *icon_visible_populated_places
                        sprite: *townspot_sprite

            populated-places-natural-earth-z3:
                filter: { name: true, source: naturalearthdata.com, $zoom: [3] }
                z3places-1:
                    filter: { scalerank: [0] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            sprite: *townspot_sprite
                z3places-2:
                    filter: { scalerank: [1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 9px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            sprite: *townspot_sprite

            populated-places-natural-earth-z4:
                filter: { name: true, source: naturalearthdata.com, $zoom: [4] }
                z4places-1:
                    filter: { scalerank: [0] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite

                z4places-2:
                    filter: { scalerank: [1,2] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 10px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite

            populated-places-natural-earth-z5:
                filter: { name: true, source: naturalearthdata.com, $zoom: [5] }
                z5places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 3px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 8px
                                sprite: *townspot_sprite

                z5places-2:
                    filter: { scalerank: [2] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 7px
                                sprite: *townspot_sprite

                z5places-3:
                    filter: { scalerank: [3,4] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 10px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 7px
                                sprite: *townspot_sprite

            populated-places-natural-earth-z6:
                filter: { name: true, source: naturalearthdata.com, $zoom: [6] }
                z6places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 3px] # half icon size
                            font:
                                size: 15px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z6places-2:
                    filter: { scalerank: [2,3,4] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 12px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 7px
                                sprite: *townspot_sprite

                z6places-3:
                    filter: { scalerank: [5,6] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 10px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 7px
                                sprite: *townspot_sprite

            populated-places-natural-earth-z7:
                filter: { name: true, source: naturalearthdata.com, $zoom: [7] }
                z7places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z7places-2:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 8px
                                sprite: *townspot_sprite

                z7places-3:
                    filter: { scalerank: [6,7] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 7px
                                sprite: *townspot_sprite

            populated-places-osm-z8:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [8]

                z8places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite
                z8places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 999999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z8places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z8places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 10px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite

                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite


            populated-places-natural-earth-z8-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [8], population: { max: 50000 } }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z8places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z8places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z8places-3-ne:
                    filter: { scalerank: [6,7] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

            populated-places-osm-z9:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [9]

                z9places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 17px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z9places-2a:
                    filter:
                        any:
                            - { population: { min: 350000, max: 999999 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                                    
                z9places-2b:
                    filter:
                        any:
                            - { population: { min: 150000, max: 350000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z9places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 15px
                            icons:
                                sprite: *townspot_sprite

                z9places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 9px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

            populated-places-osm-z9-no-population:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [9]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        font:
                            size: 10px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z9-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [9], population: { max: 50000 } }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z9places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 8px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z9places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z9places-3-ne:
                    filter: { scalerank: [6,7,8,9] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

            populated-places-osm-z10:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [10]

                z10places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 17px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z10places-2a:
                    filter:
                        any:
                            - { population: { min: 350000, max: 1000000 } }
                    draw:
                        text-blend-order:
                            anchor: center
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z10places-2b:
                    filter:
                        any:
                            - { population: { min: 150000, max: 350000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            sprite: *townspot_sprite

                z10places-3:
                    filter:
                        any:
                            - { population: { min: 50000, max: 149999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite

                z10places-4:
                    filter:
                        any:
                            - { population: { min: 20000, max: 49999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 9px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite

            populated-places-osm-z10-no-population:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [10]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        font:
                            size: 10px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z10-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [10], population: { max: 20000 } }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z10places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                                stroke: { color: *text_stroke, width: 4 }

                z10places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                sprite: *townspot_sprite

                z10places-3-ne:
                    filter: { scalerank: [6,7,8,9,10] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            # offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 6px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            icons:
                                size: 7px
                                sprite: *townspot_sprite

            populated-places-osm-z11:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [11]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center

                z11places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 18px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z11places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 999999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 14px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z11places-3:
                    filter:
                        any:
                        - { population: { min: 5000, max: 49999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 10px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

            populated-places-osm-z11-no-population:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [11]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        font:
                            size: 11px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z11-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [11], population: { max: 5000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill
                z11places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 14px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                                    stroke: { color: *text_stroke, width: 4 }
                            icons:
                                sprite: *townspot_sprite

                z11places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 11px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                                    stroke: { color: *text_stroke, width: 4 }
                            icons:
                                sprite: *townspot_sprite
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                                    stroke: { color: *text_stroke, width: 4 }

                z11places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 9px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                                    stroke: { color: *text_stroke, width: 4 }
                            icons:
                                sprite: *townspot_sprite

            populated-places-osm-z12:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [12]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center

                z12places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }

                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 18px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z12places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 999999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 14px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z12places-3:
                    filter:
                        any:
                        - { population: { min: 5000, max: 49999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

                z12places-4:
                    filter:
                        any:
                        - { population: { max: 5000 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 10px
                                fill: *text_fill
                                stroke: { color: *text_stroke, width: 4 }

            populated-places-osm-z12-no-population:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [12]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        font:
                            size: 11px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z12-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [12], population: { max: 5000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill

                z12places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 14px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                                    stroke: { color: *text_stroke, width: 4 }
                            icons:
                                sprite: *townspot_sprite

                z12places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 11px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                                    stroke: { color: *text_stroke, width: 4 }
                            icons:
                                sprite: *townspot_sprite

                z12places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11,12] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                                stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 9px
                            visible: *icon_visible_populated_places
                            sprite: *townspot_sprite
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                                    stroke: { color: *text_stroke, width: 4 }
                            icons:
                                sprite: *townspot_sprite

            populated-places-osm-z13-z14:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [13,14]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        font:
                            weight: 600
                            fill: *text_fill
                z14:
                    filter:
                        $zoom: [14]
                    draw:
                        text-blend-order:
                            font:
                                weight: 600

                z13places-1:
                    filter:
                        any:
                            - { population: { min: 200000 } }
                    draw:
                        text-blend-order:
                            visible: false

                z13places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 199999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 14px
                                stroke: { color: *text_stroke, width: 4 }

                z13places-3:
                    filter:
                        any:
                        - { population: { min: 5000, max: 49999 } }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }

            populated-places-osm-z13-z14-no-population:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: false
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [13, 14]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        visible: *text_visible_populated_places
                        font:
                            size: 11px
                            stroke: { color: *text_stroke, width: 4 }

            populated-places-natural-earth-z13-z14-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [13,14], population: { max: 5000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill
                            weight: 400

                z13places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: false
                            visible: false

                z13places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                                stroke: { color: *text_stroke, width: 4 }

                z13places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11,12] }
                    draw:
                        text-blend-order:
                            visible: *text_visible_populated_places
                            font:
                                size: 12px
                                stroke: { color: *text_stroke, width: 4 }

            neighborhood-z11:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [11]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11]
                            - max_zoom: { min: 12 }
                            - is_landuse_aoi: false
                            #- kind_tile_rank: { max: 6 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 9px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 4 }
            neighborhood-z12:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [12]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12]
                            - max_zoom: { min: 13 }
                            - is_landuse_aoi: false
                            #- kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 10px
                            weight: 400
                            fill: [0.300,0.300,0.300]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 2 }
            neighborhood-z13:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [13]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13]
                            - max_zoom: { min: 14 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 11px
                            weight: 400
                            fill: [0.35,0.35,0.35]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 2 }
            neighborhood-z14:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [14]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14]
                            - max_zoom: { min: 15 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 13px
                            weight: 400
                            fill: [0.000,0.000,0.000,0.500]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 3 }
            neighborhood-z15:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [15]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14,15]
                            - max_zoom: { min: 16 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 16px
                            weight: 300
                            fill: [0.000,0.000,0.000,0.480]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 3 }
                z15-new:
                    filter: 
                        all:
                            - min_zoom: 15
                    draw:
                        text-blend-order:
                            font:
                                size: 13px
            neighborhood-z16:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [16]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14,15,16]
                            - max_zoom: { min: 17 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 17px
                            weight: 300
                            fill: [0.000,0.000,0.000,0.400]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 3 }


    pois_and_landuse_labels:
        data: { source: osm, layer: [pois,landuse,buildings] }
        visible: *label_visible_poi_landuse
        filter: 
            not: { kind: [building,farm,peak,tree,gate,address,apron] }
            any:
                - area: false
                  all:
                      - $zoom: { min: 12 }
                - area: true
                  all:
                      - $geometry: point
                      - kind: true
        draw:
            icons:
                size: [[13, 12px], [16, 16px], [19, 20px]]
                interactive: true
                visible: false
                priority: 15
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                move_into_tile: false # preserves text alignment w/icons in JS
                anchor: bottom
                offset: [[13, [0, 6px]], [16, [0, 8px]], [19, [0, 10px]]] # offset tracks alongside icon size (half icon height)
                interactive: true
                priority: 16
                font:
                    family: *text_font_family
                    weight: 400
                    fill: [0.20,0.20,0.20]
                    size: 10px
                    stroke: { color: *text_stroke, width: 1 }
        poi_labels-z14:
            filter: { $zoom: [14] }
            draw: { text-blend-order: { font: { size: 11px } } }
        poi_labels-z15:
            filter: { $zoom: [15,16,17] }
            draw: { text-blend-order: { font: { size: 12px, stroke: { width: 2 } } } }
        poi_labels-z18:
            filter: { $zoom: [18,19] }
            draw: { text-blend-order: { font: { size: 12px, weight: 600, stroke: { width: 3 } } } }
        poi_labels-z20-up:
            filter: { $zoom: { min: 20 } }
            draw: { text-blend-order: { font: { size: 14px, weight: 600, stroke: { width: 3 }  } } }
        # no-name:
        #     filter: { name: false }
        #     sports-pitch:
        #         filter: { kind: [grass, pitch], $geometry: point, area: true, $zoom: { min: 17 } }
        #         draw:
        #             icons:
        #                 sprite: function() { return feature.sport }
        #                 visible: *icon_visible_poi_landuse_e
        #                 priority: 19
        #         baseball:
        #             filter: { sport: baseball }
        #             draw: { icons: { sprite: baseball-field } }
        #         basketball:
        #             filter: { sport: basketball }
        #             draw: { icons: { sprite: basketball-court } }
        #         football:
        #             filter: { sport: football }
        #             draw: { icons: { sprite: football-stadium } }
        #         hockey:
        #             filter: { sport: hockey-field }
        #             draw: { icons: { sprite: hockey-field } }
        #         soccer:
        #             filter: { sport: soccer }
        #             draw: { icons: { sprite: soccer-field } }
        #         tennis:
        #             filter: { sport: tennis }
        #             draw: { icons: { sprite: tennis } }
        #     toilets:
        #         filter: { kind: toilets, $zoom: { min: 18 }  }
        #         draw: { icons: { sprite: toilets, visible: *icon_visible_poi_landuse_e } }
        #     picnic_site:
        #         filter: { kind: picnic_site, $zoom: { min: 18 }  }
        #         draw: { icons: { sprite: picnic-spot, visible: *icon_visible_poi_landuse_e } }
        #     information:
        #         filter: { kind: information, $zoom: { min: 18 }  }
        #         draw: { icons: { sprite: information, visible: *icon_visible_poi_landuse_e } }
        #     drinking-water:
        #         filter: { kind: drinking_water, $zoom: { min: 18 }  }
        #         draw: { icons: { sprite: drinking-water, visible: *icon_visible_poi_landuse_e } }
        #     traffic-signal:
        #         filter: { kind: traffic_signals, $zoom: { min: 18 } }
        #         draw:   { icons: { sprite: traffic-signal, visible: *icon_visible_poi_landuse_e } }
        #     bicycle-parking:
        #         filter: { kind: [bicycle_parking], $zoom: { min: 19 } }
        #         draw:   { icons: { sprite: bicycle-parking, visible: *icon_visible_poi_landuse_e } }
        has-name:
            filter: { name: true }
            # # match 1:1 correlations between data and sprite name
            # direct-match:
            #     filter: { area: false }
            #     draw:
            #         icons:
            #             # sprite_source: kind
            #             sprite: function() { return feature.kind; }
            #             visible: *icon_visible_poi_landuse

            # # add generic icon at high zoom, if direct match fails
            # generic-icons:
            #     filter: { $zoom: { min: 18 }, area: false }
            #     draw:
            #         icons:
            #             sprite_default: generic
            #             visible: *icon_visible_poi_landuse
            #             priority: 17

            # # add generic icon at high zoom
            # default-label-names:
            #     filter: { $zoom: { min: 13 }, area: false }
            #     draw:
            #         text-blend-order:
            #             visible: *text_visible_poi_landuse
            #             priority: 18

            landuse-labels-green-areas-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [national_park, "park or protected land"]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [4],  area: { min: 3000000000 } }
                        - { $zoom: [5],  area: { min: 3000000000 } }
                        - { $zoom: [6],  area: { min: 500000000 } }
                        - { $zoom: [7,8,9],  area: { min: 100000000 } }
                        - { $zoom: [10], area: { min: 50000000 } }
                        - { $zoom: [11], area: { min: 25000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 200000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        - { $zoom: { min: 15 } }
                national-park:
                    # yosemite national park, joshua tree national park
                    filter: function() { return feature.name && feature.name.indexOf("National Park") > -1; }
                    visible: *label_visible_landuse_green
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            priority: 11
                        text-blend-order:
                            visible: *text_visible_landuse_green
                            priority: 12
                            font:
                                fill: *text_fill_park
                                style: italic
                                stroke: { color: *text_stroke_park, width: 4 }
                    natl-park-labels-z4-z6:
                        filter: { $zoom: [4,5,6] }
                        draw:
                            icons:
                                visible: false
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z7:
                        filter: { $zoom: [7] }
                        draw:
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z8:
                        filter: { $zoom: [8,9] }
                        draw:
                            text-blend-order: { font: { size: 11px, stroke: { width: 2px } } }
                    natl-park-labels-z10:
                        filter: { $zoom: {min: 10, max: 14 } }
                        draw:
                            text-blend-order: { font: { size: 12px } }

            landuse-labels-green-areas-not-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, forest, grass]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5],    area: { min: 10000000000 } }
                        - { $zoom: [6,7],  area: { min: 5000000000 } }
                        - { $zoom: [8],    area: { min: 1000000000 } }
                        - { $zoom: [9],    area: { min: 100000000 } }
                        - { $zoom: [10],   area: { min: 50000000 } }
                        - { $zoom: [11],   area: { min: 25000000 } }
                        - { $zoom: [12],   area: { min: 5000000 } }
                        - { $zoom: [13],   area: { min: 200000 } }
                        - { $zoom: [14],   area: { min: 50000 } }
                        - { $zoom: [15],   area: { min: 10000 } }
                        - { $zoom: [16],   area: { min: 1000 } }
                        - { $zoom: { min: 17 } }
                not-national-park:
                    filter: function() { return !( feature.name.indexOf("National Park") > -1 ); }
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            priority: 11
                        text-blend-order:
                            visible: *text_visible_landuse_green
                            priority: 12
                            font:
                                fill: *text_fill_park
#                                size: 12px
#                                weight: 400
                                style: italic
                                stroke: { color: *text_stroke_park, width: 4 }
                    green-areas-z6:
                        # mojave national preserve
                        filter: { $zoom: [6] }
                        draw:
                            icons: { visible: false }
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    green-areas-z7:
                        filter: { $zoom: [7] }
                        draw:
                            icons: { visible: false }
                            text-blend-order: { font: { size: 10px } }
                    green-areas-z8-z9:
                        filter: { $zoom: { min: 8, max: 14 } }
                        draw:
                            text-blend-order: { font: { size: 11px } }
                    wilderness-areas-early:
                       filter: function() { return $zoom < 10 && feature.name && (feature.name.indexOf("Wilderness") > -1 || feature.name.indexOf("BLM") > -1) }
                       draw:
                           text-blend-order: { visible: false }
                           icons: { visible: false }
                    early-not-national-park:
                        filter: { not: { kind: national_park }, $zoom: { max: 6 } }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    not-national-park:
                        filter: function() { return feature.name && feature.name.indexOf("Park") > -1 }
                        # draw:
                        #     icons:
                        #         sprite: park
                        early:
                            filter: { $zoom: { max: 8 } }
                            draw:
                                text-blend-order: { visible: false }
                                icons: { visible: false }
                    forest:
                        filter: function() { return $zoom < 8 && ((feature.name && feature.name.indexOf("Forest") > -1) || feature.protect_class >=6) }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    hide-till-later:
                        filter: { kind: [grass], $zoom: { max: 16 } }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    only-text-later:
                        filter: { kind: [grass], $zoom: { min: 16 } }
                        draw:
                            text-blend-order: { font: { style: italic } }
                            icons: { visible: false }
            airport:
                filter:
                    all:
                        - kind: [airport, aerodrome]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],  area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 10000000 } }
                        - { $zoom: [11], area: { min: 5000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 500000 } }
                        - { $zoom: [14], area: { min: 20000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    icons:
                        sprite: airport
                        visible: *icon_visible_landuse_green
                        priority: 12
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        priority: 11
                        text_source: function() { if(feature.iata) { return feature.name + ' (' + feature.iata + ')'; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            #size: 11px
                            stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: [9,10,11] }
                    # todo: huh?
                    draw: { text-blend-order: { text_source: iata, font: { size: 11px } } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { text-blend-order: { font: { size: 11px } } }
            university:
                filter:
                    all:
                        - kind: [university,college]
                        - area: true
                        - $geometry: point
                        - not: { $layer: buildings }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],   area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                visible: *label_visible_landuse_green
                draw:
                    icons:
                        sprite: college-university
                        visible: *icon_visible_landuse_green
                        priority: 11
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        priority: 12
                        font:
                            weight: 600
                            fill: *text_fill
                            #size: 10px
                            stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 12 } }
                    draw: { text-blend-order: { visible: false } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
            school:
                filter:
                    all:
                        - kind: [school, kindergarten]
                        - area: true
                        - $geometry: point
                        - not: { $layer: buildings }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                visible: *label_visible_landuse_green
                draw:
                    icons:
                        sprite: school
                        visible: *icon_visible_landuse_green
                        priority: 11
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { font: { size: 11px } } }
            winter_sports:
                filter:
                    all:
                        - kind: winter_sports
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                    icons:
                        sprite: ski-area
                        visible: *icon_visible_landuse_green
                        priority: 11
                early:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { font: { size: 10px } } }
            landuse-labels-not-green-areas:
                filter:
                    all:
                        - $zoom: { min: 6 }
                        - area: true
                        - $geometry: point
                        - not: { kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, airport, aerodrome, university, college, school, kindergarten,winter_sports] }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5,6,7], area: { min: 5000000000 } }
                        - { $zoom: [8],     area: { min: 1600000000 } }
                        - { $zoom: [9],     area: { min: 400000000 } }
                        - { $zoom: [10],    area: { min: 100000000 } }
                        - { $zoom: [11],    area: { min: 25000000 } }
                        - { $zoom: [12],    area: { min: 5000000 } }
                        - { $zoom: [13],    area: { min: 1000000 } }
                        - { $zoom: [14],    area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15],    area: { min: 5000 } }
                        - { $zoom: [16],    area: { min: 2000 } }
                        - { $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.kind; }
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        priority: 13
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        priority: 14
                        font:
                            fill: *text_fill
#                            size: 10px
                            weight: 600
                            stroke: { color: *text_stroke, width: 4 }
                early-sizing:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
                # building-like:
                #     filter: { kind: [commercial,residential,warehouse,public,dormitory], osm_relation: false }
                #     draw:
                #         icons:
                #             sprite: building
#                residential-relations-paris-wtf:
#                    filter: { kind: [residential], osm_relation: true }
#                    draw:
#                        icons:
#                            text-blend-order: { visible: true, text_source: short_name, font: { fill: red } }
#                            icons: { sprite: park, visible: true }
                hide-till-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { max: 17 } }
                    draw:
                        text-blend-order: { visible: false }
                        icons: { visible: false }
                only-text-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { min: 17 } }
                    draw:
                        text-blend-order: { font: { style: italic } }
                        icons: { visible: false }
            university-poi:
                filter: { kind: [university], area: false, $zoom: { max: 16 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            office-early:
                filter:
                    any:
                        - { kind: [insurance, office, company], $zoom: [15], area: { max: 10000 } }
                        - { kind: [insurance, office, company], $zoom: [16], area: { max: 5000 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            bank-early:
                filter: { kind: [bank], $zoom: { max: 17 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            post-office-early:
                filter: { kind: [post_office], $zoom: { max: 14 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            atm-early:
                filter: { kind: [atm], $zoom: { max: 18 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            memorial-early:
                filter: { kind: [memorial], $zoom: { max: 13 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            parking-labels-early:
                filter:
                    kind: [parking]
                    $zoom: { max: 18 }
                draw:
                    text-blend-order:
                        visible: false
                    icons:
                        visible: false
            parking-labels:
                filter:
                    kind: [parking]
                    $zoom: { min: 18 }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        font:
                            fill: *text_fill
                            size: 10px
                            stroke: { color: *text_stroke, width: 4 }
            landuse-funky:
                filter: { kind: [commercial, residential, wood], $zoom: { max: 17 } }
                draw:
                    text-blend-order:
                        visible: false
            car-sharing:
                filter: { kind: car_sharing }
                icons-early:
                    filter: { $zoom: { max: 17 } }
                    draw:
                        icons:
                            visible: false
                text-labels-early:
                    filter: { $zoom: { max: 19 } }
                    draw:
                        text-blend-order:
                            visible: false
            tower:
                filter: { kind: [tower], label_placement: yes }
                draw:
                    icons:
                        visible: false
                    text-blend-order:
                        font:
                            style: italic
            station-train-subway:
                filter: { kind: [station, train-station, train_station], $zoom: { min: 11 } }
                visible: *label_visible_station
                draw:
                    icons:
                        visible: *icon_visible_station
                        sprite: train-station
                        size: [[13, 12px], [14, 14px], [15, 16px], [17, 20px]]
                        priority: 11
                    text-blend-order:
                        visible: *text_visible_station
                        offset: [[13, [0, 6px]], [14, [0, 7px]],[15, [0, 8px]], [17, [0, 10px]]]
                        priority: 12
                low-priority-early:
                    filter: { kind_tile_rank: { min: 5 }, $zoom: { min: 0, max: 13 } }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 10px], [14, 10px], [15, 16px]]
                        text-blend-order: { visible: false }
                low-priority-early-z13:
                    filter: { kind_tile_rank: { min: 5 }, $zoom: [13] }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 10px], [14, 10px], [15, 16px]]
                        text-blend-order: { visible: false } 
                low-priority-early-z14:
                    filter: { kind_tile_rank: { min: 7 }, $zoom: { min: 14, max: 15 } }
                    draw:
                        icons:
                            size: [[12, 10px], [14, 11px], [15, 16px]]
                            #visible: false
                        text-blend-order: { visible: false }
            tram-stop-early:
                filter: { kind: tram_stop, $zoom: { max: 15 } }
                draw:
                    icons:
                        visible: false
            tram-stop-early-z15:
                filter: { kind: tram_stop, $zoom: [15] }
                draw:
                    text-blend-order:
                        visible: false
            tram-stop:
                filter: { kind: tram_stop, $zoom: { min: 15 } }
                draw:
                    icons:
                        size: [[13, 12px], [16, 18px]]
                    text-blend-order:
                        offset: [[13, [0, 6px]], [16, [0, 9px]]]
            bus-stop-bus-station-labels:
                filter:
                    kind: [bus_stop, bus_station]
                    $zoom: { min: 18 }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        font:
                            fill: *text_fill
                            size: 11px
                            stroke: { color: *text_stroke, width: 4 }
            #     bus_stop:
            #         filter:
            #             kind: [bus_stop]
            #             $zoom: { max: 19 }
            #         draw:
            #             icons:
            #                 size: [[13, 8px], [19, 18px]]
            #             text-blend-order:
            #                 visible: false

            # icons:
            #     adult-boutique:
            #         filter: { kind: [erotic, adult_boutique] }
            #         draw:   { icons: { sprite: adult-boutique } }
            #     allotments:
            #         filter: { kind: [allotments] }
            #         draw:   { icons: { sprite: garden } }
            #     airport:
            #         filter: { kind: [airport, aerodrome] }
            #         draw:   { icons: { sprite: airport } }
            #     animal-shelter:
            #         filter: { kind: [animal_shelter, animal-shelter, animal_boarding] }
            #         draw:   { icons: { sprite: animal-shelter } }
            #     antique-shop:
            #         filter: { kind: [antiques, antique-shop] }
            #         draw:   { icons: { sprite: antique-shop } }
            #     art-gallery:
            #         filter: { kind: [art_gallery, art-gallery, art, artwork] }
            #         draw:   { icons: { sprite: art-gallery } }
            #     athletics-sports:
            #         filter: { kind: [athletic_sports, recreation_ground, sports_centre] }
            #         draw:   { icons: { sprite: athletics-sports } }
            #     automotive-shop:
            #         filter: { kind: [car_repair, automotive-shop, automotive, tyres] }
            #         draw:   { icons: { sprite: automotive-shop } }
            #     bakery:
            #         filter: { kind: [bakery, pastry, chocolate] }
            #         draw:   { icons: { sprite: bakery } }
            #     bar:
            #         filter: { kind: [pub, bar] }
            #         draw:   { icons: { sprite: bar } }
            #     beer-garden:
            #         filter: { kind: [biergarten, beer-garden, brewery] }
            #         draw:   { icons: { sprite: beer-garden } }
            #     bike-shop:
            #         filter: { kind: [bicycle, bicycle_rental, bike, bike_shop] }
            #         draw:   { icons: { sprite: bike-shop } }
            #     boat-ferry:
            #         filter: { kind: [ferry_terminal, boat-ferry, ferry-boat, ferry] }
            #         draw:   { icons: { sprite: boat-ferry } }
            #     boat-ramp:
            #         filter: { kind: [slipway, boat-ramp, boat_ramp] }
            #         draw:   { icons: { sprite: boat-ramp } }
            #     bookstore:
            #         filter: { kind: [books, bookstore] }
            #         draw:   { icons: { sprite: bookstore } }
            #     bowling-alley:
            #         filter: { kind: [bowling_alley, bowling-alley] }
            #         draw:   { icons: { sprite: bowling-alley } }
            #     bridal-shop:
            #         filter: { kind: [bridal, bridal-shop] }
            #         draw:   { icons: { sprite: bridal-shop } }
            #     building-icon:
            #         filter: { kind: [building, auditorium, terminal, hangar, retirement_home, manor, recreation_center, apartments] }
            #         draw:   { icons: { sprite: building } }
            #         early:
            #             filter:
            #                 any:
            #                     # show labels for smaller landuse areas at higher zooms
            #                     - { $zoom: [14], area: { max: 200000 } }
            #                     - { $zoom: [15], area: { max: 20000 } }
            #                     - { $zoom: [16], area: { max: 5000 } }
            #                     - { $zoom: [17], area: { max: 1000 } }
            #             draw:
            #                 text-blend-order:
            #                     visible: false
            #                 icons:
            #                     visible: false
            #     burger:
            #         filter: { kind: [fast_food, burger] }
            #         draw:   { icons: { sprite: burger } }
            #     bus-station:
            #         filter: { kind: [bus_stop, bus_station] }
            #         draw:   { icons: { sprite: bus-station } }
            #     camera-store:
            #         filter: { kind: [camera, camera-store, photo] }
            #         draw:   { icons: { sprite: camera-store } }
            #     campground:
            #         filter: { kind: [campground, camp_site, caravan_site] }
            #         draw:   { icons: { sprite: campground } }
            #     candy-store:
            #         filter: { kind: [candy, candy-store, confectionery] }
            #         draw:   { icons: { sprite: candy-store } }
            #     car-dealership:
            #         filter: { kind: [car, car-dealership] }
            #         draw:   { icons: { sprite: car-dealership } }
            #     car-wash:
            #         filter: { kind: [car_wash, car-wash] }
            #         draw:   { icons: { sprite: car-wash } }
            #     castle:
            #         filter: { kind: [castle, fort] }
            #         draw:   { icons: { sprite: castle } }
            #     cemetery:
            #         filter: { kind: [grave_yard, cemetery] }
            #         draw:   { icons: { sprite: cemetery } }
            #     cheese-shop:
            #         filter: { kind: [cheese, cheese-shop] }
            #         draw:   { icons: { sprite: cheese-shop } }
            #     clothing-store:
            #         filter: { kind: [clothes, chothing-store, "clothes store", fashion] }
            #         draw:   { icons: { sprite: clothing-store } }
            #     coffee-shop:
            #         filter: { kind: [cafe, coffee-shop] }
            #         draw:   { icons: { sprite: coffee-shop } }
            #     college-university:
            #         filter: { kind: [university, college, college-university], area: false }
            #         draw:   { icons: { sprite: college-university } }
            #     concert-hall:
            #         filter: { kind: [music_venue] }
            #         draw:   { icons: { sprite: concert-hall } }
            #     convenience-store:
            #         filter: { kind: [convenience, convenience-store, convenience_store, beverages] }
            #         draw:   { icons: { sprite: convenience-store } }
            #     cosmetics-shop:
            #         filter: { kind: [cosmetics, cosmetics-shop, beauty] }
            #         draw:   { icons: { sprite: cosmetics-shop } }
            #     department-store:
            #         filter: { kind: [department_store, department-store] }
            #         draw:   { icons: { sprite: department-store } }
            #     dog-run:
            #         filter: { kind: [dog_park, dog_run, dog-run] }
            #         draw:   { icons: { sprite: dog-run } }
            #     dry-cleaning:
            #         filter: { kind: [dry_cleaning] }
            #         draw:   { icons: { sprite: dry-cleaning } }
            #     electronics-store:
            #         filter: { kind: [electronics, electronics-store, computer] }
            #         draw:   { icons: { sprite: electronics-store } }
            #     factory:
            #         filter: { kind: [factory, industrial, chimney, sub_station, substation, wastewater_plant, works, water_works, plant, generator] }
            #         draw:   { icons: { sprite: factory } }
            #     farmers-market:
            #         filter: { kind: [farmers_market, farmers-market] }
            #         draw:   { icons: { sprite: farmers-market } }
            #     fire-station:
            #         filter: { kind: [fire_station, fire-station] }
            #         draw:   { icons: { sprite: fire-station } }
            #     fish-market:
            #         filter: { kind: [fish, fish-market, seafood, fishmonger] }
            #         draw:   { icons: { sprite: fish-market } }
            #     fishing-spot:
            #         filter: { kind: [fishing_spot, fishing-spot, fishing] }
            #         draw:   { icons: { sprite: fishing-spot } }
            #     fitness:
            #         filter: { kind: [gym, fitness, fitness_center] }
            #         draw:   { icons: { sprite: fitness } }
            #     flea-market:
            #         filter: { kind: [flea_market, flea-market] }
            #         draw:   { icons: { sprite: flea-market } }
            #     flower-shop:
            #         filter: { kind: [florist, flower-shop] }
            #         draw:   { icons: { sprite: flower-shop } }
            #     forest:
            #         filter: { kind: [forest, conservation, wood] }
            #         draw:   { icons: { sprite: forest } }
            #     furniture-store:
            #         filter: { kind: [furniture, furniture-store] }
            #         draw:   { icons: { sprite: furniture-store } }
            #     garden-center:
            #         filter: { kind: [garden_centre, garden_center] }
            #         draw:   { icons: { sprite: garden-center } }
            #     gas-station:
            #         filter: { kind: [fuel, gas-station] }
            #         draw:   { icons: { sprite: gas-station } }
            #     general-entertainment:
            #         filter: { kind: [ticket, general_entertainment] }
            #         draw:   { icons: { sprite: general-entertainment } }
            #     generic:
            #         filter: { kind: [generic] }
            #         draw:   { icons: { sprite: generic } }
            #     gift-shop:
            #         filter: { kind: [gift, gift-shop] }
            #         draw:   { icons: { sprite: gift-shop } }
            #     golf-course:
            #         filter: { kind: [golf-course, golf_course] }
            #         draw:   { icons: { sprite: golf-course } }
            #     government-building:
            #         filter: { kind: [townhall, public_building, embassy] }
            #         draw:   { icons: { sprite: government-building } }
            #     grocery-store:
            #         filter: { kind: [supermarket, grocery-store, health_food, greengrocer] }
            #         draw:   { icons: { sprite: grocery-store } }
            #     harbor-marina:
            #         filter: { kind: [marina, harbor, harbor-marina, harbor_marina, dock, mooring] }
            #         draw:   { icons: { sprite: harbor-marina } }
            #     hardware-store:
            #         filter: { kind: [hardware, hardware-store, doityourself, paint] }
            #         draw:   { icons: { sprite: hardware-store } }
            #     hiking-trail:
            #         filter: { kind: [trailhead, hiking_trail] }
            #         draw:   { icons: { sprite: hiking-trail } }
            #     hotel:
            #         filter: { kind: [hotel, motel, hostel] }
            #         draw:   { icons: { sprite: hotel } }
            #     hunting-supply:
            #         filter: { kind: [hunting, fishing] }
            #         draw:   { icons: { sprite: hunting-supply } }
            #     ice-cream-shop:
            #         filter: { kind: [ice_cream] }
            #         draw:   { icons: { sprite: ice-cream-shop } }
            #     information:
            #         filter: { kind: [info, information] }
            #         draw:   { icons: { sprite: information } }
            #     jewelry-store:
            #         filter: { kind: [jewelry, jewelry_store, jewelry-store] }
            #         draw:   { icons: { sprite: jewelry-store } }
            #     landmark:
            #         filter: { kind: [landmark, memorial, monument, wayside_shrine, beacon] }
            #         draw:   { icons: { sprite: landmark } }
            #     tower:
            #         filter: { kind: [tower], label_placement: false }
            #         draw:   { icons: { sprite: landmark } }
            #     laundry:
            #         filter: { kind: [laundry] }
            #         draw:   { icons: { sprite: laundry } }
            #     light-rail:
            #         filter: { kind: [light-rail, light_rail, tram_stop] }
            #         draw:   { icons: { sprite: light-rail } }
            #     liquor-store:
            #         filter: { kind: [alcohol, liquor-store, liquor] }
            #         draw:   { icons: { sprite: liquor-store } }
            #     market:
            #         filter: { kind: [market, variety_store, boutique, dairy, retail] }
            #         draw:   { icons: { sprite: market } }
            #     mine:
            #         filter: { kind: [mind, quarry, mineshaft, adit] }
            #         draw:   { icons: { sprite: mine } }
            #     miscellaneous-shop:
            #         filter: { kind: [houseware, miscellaneous-shop] }
            #         draw:   { icons: { sprite: miscellaneous-shop } }
            #     mobile-phone-shop:
            #         filter: { kind: [mobile_phone] }
            #         draw:   { icons: { sprite: mobile-phone-shop } }
            #     motorcycle-shop:
            #         filter: { kind: [motorcycle, motorcycle_shop, motorcycle_repair] }
            #         draw:   { icons: { sprite: motorcycle-shop } }
            #     mountain:
            #         filter: { kind: [mountain, peak] }
            #         draw:   { icons: { sprite: mountain } }
            #     movie-theatre:
            #         filter: { kind: [cinema, movie-theatre, movie-theater] }
            #         draw:   { icons: { sprite: movie-theatre } }
            #     museum:
            #         filter: { kind: [museum, observatory] }
            #         draw:   { icons: { sprite: museum } }
            #     music-store:
            #         filter: { kind: [music, music-store, musical_instrument] }
            #         draw:   { icons: { sprite: music-store } }
            #     newsstand:
            #         filter: { kind: [kiosk, newsstand, newsagent] }
            #         draw:   { icons: { sprite: newsstand } }
            #     nightlife:
            #         filter: { kind: [nightclub, nightlife] }
            #         draw:   { icons: { sprite: nightlife } }
            #     office:
            #         filter: { kind: [insurance, office, company] }
            #         draw:   { icons: { sprite: office } }
            #     office-supplies:
            #         filter: { kind: [office_supplies, office-supplies, stationery] }
            #         draw:   { icons: { sprite: office-supplies } }
            #     optical-shop:
            #         filter: { kind: [optician, optical_shop, optical-shop] }
            #         draw:   { icons: { sprite: optical-shop } }
            #     performing-arts:
            #         filter: { kind: [theater, theatre, performing-arts] }
            #         draw:   { icons: { sprite: performing-arts } }
            #     pet-store:
            #         filter: { kind: [pet, pet-store, pet-service, pet_store] }
            #         draw:   { icons: { sprite: pet-store } }
            #     pharmacy:
            #         filter: { kind: [pharmacy, chemist] }
            #         draw:   { icons: { sprite: pharmacy } }
            #     photography-lab:
            #         filter: { kind: [photo_studio, photography_lab, photographer] }
            #         draw:   { icons: { sprite: photography-lab } }
            #     picnic-spot:
            #         filter: { kind: [picnic_site, picnic_spot, picnic-spot] }
            #         draw:   { icons: { sprite: picnic-spot } }
            #     pool:
            #         filter: { kind: [pool, swimming_pool, water_park] }
            #         draw:   { icons: { sprite: pool } }
            #     pool-hall:
            #         filter: { kind: [billiards, pool-hall] }
            #         draw:   { icons: { sprite: pool-hall } }
            #     post-office:
            #         filter: { kind: [post_office, post-office] }
            #         draw:   { icons: { sprite: post-office } }
            #     power-pylon:
            #         filter: { kind: [tower, power-pylon, pylon] }
            #         draw:   { icons: { sprite: power-pylon } }
            #     real-estate:
            #         filter: { kind: [estate_agent, real_estate] }
            #         draw:   { icons: { sprite: real-estate } }
            #     recycling-facility:
            #         filter: { kind: [recycling, recycling-facility] }
            #         draw:   { icons: { sprite: recycling-facility } }
            #     rental-car:
            #         filter: { kind: [rental-car, car_rental, car_sharing] }
            #         draw:   { icons: { sprite: rental-car } }
            #     rest-area:
            #         filter: { kind: [rest_area, rest-area] }
            #         draw:   { icons: { sprite: rest-area } }
            #     restaurant:
            #         filter: { kind: [restaurant, deli] }
            #         draw:   { icons: { sprite: restaurant } }
            #     ruin:
            #         filter: { kind: [ruins, archaeological_site] }
            #         draw:   { icons: { sprite: ruin } }
            #     salon-barber:
            #         filter: { kind: [hairdresser, salon-barber, salon, beauty_salon] }
            #         draw:   { icons: { sprite: salon-barber } }
            #     ship-wreck:
            #         filter: { kind: [wreck] }
            #         draw:   { icons: { sprite: ship-wreck } }
            #     shoe-store:
            #         filter: { kind: [shoes, shoe-store, shoe_store] }
            #         draw:   { icons: { sprite: shoe-store } }
            #     smoke-shop:
            #         filter: { kind: [smoke_shop, tobacco] }
            #         draw:   { icons: { sprite: smoke-shop } }
            #     spa-massage:
            #         filter: { kind: [spa, spa-massage, sauna, massage] }
            #         draw:   { icons: { sprite: spa-massage } }
            #     spiritual-center:
            #         filter: { kind: [spiritual_center, spiritual-center, place_of_worship, wayside_chapel] }
            #         draw:   { icons: { sprite: spiritual-center } }
            #     church:
            #         filter: { kind: place_of_worship, religion: christian }
            #         draw:   { icons: { sprite: church } }
            #     synagogue:
            #         filter: { kind: place_of_worship, religion: jewish }
            #         draw:   { icons: { sprite: synagogue } }
            #     buddhist:
            #         filter: { kind: place_of_worship, religion: buddhist }
            #         draw:   { icons: { sprite: buddhism } }
            #     mosque:
            #         filter: { kind: place_of_worship, religion: muslim }
            #         draw:   { icons: { sprite: mosque } }
            #     sporting-goods-shop:
            #         filter: { kind: [sporting_goods, sporting-goods-shop, sports, outdoor] }
            #         draw:   { icons: { sprite: sporting-goods-shop } }
            #     stable:
            #         filter: { kind: [stable, horse_riding] }
            #         draw:   { icons: { sprite: stable } }
            #     storage-facility:
            #         filter: { kind: [storage, storage-facility] }
            #         draw:   { icons: { sprite: storage-facility } }
            #     subway-entrance:
            #         filter: { kind: [subway_entrance] }
            #         draw:   { icons: { sprite: subway-entrance } }
            #     tailor-shop:
            #         filter: { kind: [tailor, tailor-shop] }
            #         draw:   { icons: { sprite: tailor-shop } }
            #     tattoo-parlor:
            #         filter: { kind: [tattoo, tattoo_parlor, tattoo-parlor] }
            #         draw:   { icons: { sprite: tattoo-parlor } }
            #     theme-park:
            #         filter: { kind: [theme_park, theme-park, miniature_golf] }
            #         draw:   { icons: { sprite: theme-park } }
            #     thrift-vintage-store:
            #         filter: { kind: [thrift, thrift-vintage-store, second_hand] }
            #         draw:   { icons: { sprite: thrift-vintage-store } }
            #     toll-booth:
            #         filter: { kind: [toll_booth, checkpoint, border_control] }
            #         draw:   { icons: { sprite: toll-booth } }
            #     toy-game-store:
            #         filter: { kind: [toys, toy-game-store, baby_goods] }
            #         draw:   { icons: { sprite: toy-game-store } }
            #     toilets:
            #         filter: { kind: [toilets] }
            #         draw:   { icons: { sprite: toilets } }
            #     veterinarian:
            #         filter: { kind: [pet_care, veterinarian, veterinary] }
            #         draw:   { icons: { sprite: veterinarian } }
            #     video-game-store:
            #         filter: { kind: [video_games] }
            #         draw:   { icons: { sprite: video-game-store } }
            #     video-store:
            #         filter: { kind: [video, video_store] }
            #         draw:   { icons: { sprite: video-store } }
            #     view-point:
            #         filter: { kind: [viewpoint, view_point, view-point, vista] }
            #         draw:   { icons: { sprite: view-point } }
            #     well:
            #         filter: { kind: [well, water_well] }
            #         draw:   { icons: { sprite: well } }
            #     wine-shop:
            #         filter: { kind: [wine, wine-shop] }
            #         draw:   { icons: { sprite: wine-shop } }
            #     winery:
            #         filter: { kind: [winery, wine] }
            #         draw:   { icons: { sprite: winery } }
            #     winter_sport:
            #         filter: { kind: [ski, ski_rental, ski_school, ski_jumping, skiing] }
            #         draw:   { icons: { sprite: ski-area } }

    # todo: ocean and sea features are hiding in the places layer
    water-area-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - not: { kind: [riverbank, dock, playa] }
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 5 },  area: { min: 10000000000 } }
                - { $zoom: { min: 6 },  area: { min: 5000000000 } }
                - { $zoom: { min: 7 },  area: { min: 400000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        default-label-text:
            draw:
                text-blend-order:
                    font:
                        fill: *text_fill_water
                        family: *text_font_family
                        style: italic
                        weight: 400
                        size: 12px
                        # stroke: { color: [0.878,0.929,0.980], width: 2 }
        lakes-z5:
            filter: { $zoom: [5] }
            draw:
                text-blend-order: { font: { size: 9px } }
        lakes-z6:
            filter: { $zoom: [6] }
            draw:
                text-blend-order: { font: { size: 11px } }
        lakes-z8:
            filter: { $zoom: [8] }
            draw:
                text-blend-order: { font: { size: 12px } }

    ocean-sea-labels:
        data: { source: osm, layer: places }
        visible: *text_visible_water_labels
        filter: { name: true, kind: [sea, ocean] }
        draw:
            text-blend-order:
                font:
                    fill: *text_fill_water
                    family: *text_font_family
                    weight: 400
                    size: 12px
                    transform: uppercase
        sea-early:
            filter: { $zoom: [3], kind: sea }
            draw: { text-blend-order: { visible: false } }
        ocean-spacer:
            filter: { kind: ocean }
            ocean-spacer-z1-z4:
                filter: { $zoom: { min: 1, max: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join(' ') }
                        text_wrap: false
            ocean-spacer-z4-up:
                filter: { $zoom: { min: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join('  ') }
                        text_wrap: false
        ocean-labels-z1:
            filter: { $zoom: [1] }
            draw:
                text-blend-order: { font: { size: 8px } }
        ocean-labels-z2:
            filter: { $zoom: [2] }
            draw:
                text-blend-order: { font: { size: 10px } }
        ocean-labels-z3:
            filter: { $zoom: [3] }
            draw:
                text-blend-order: { font: { size: 13px } }
        ocean-labels-z4-up:
            filter: { $zoom: { min: 4} }
            draw:
                text-blend-order: { font: { size: 16px } }

        sea-spacer:
            filter: { not: { kind: [ocean] }, $zoom: { min: 5 } }
            draw:
                text-blend-order:
                    text_source: function() { return feature.name.split('').join(' ') }
                    text_wrap: false

        sea-labels:
            filter: { not: { kind: [ocean] } }
            sea-labels-z4:
                    filter: { $zoom: [4] }
                    draw:
                        text-blend-order: { font: { size: 9px } }
            sea-labels-z5:
                    filter: { $zoom: [5] }
                    draw:
                        text-blend-order: { font: { size: 10px } }
            sea-labels-z6:
                    filter: { $zoom: [6] }
                    draw:
                        text-blend-order: { font: { size: 11px } }
            sea-labels-z7:
                    filter: { $zoom: [7] }
                    draw:
                        text-blend-order: { font: { size: 12px } }
            sea-labels-z8:
                    filter: { $zoom: { min: 8} }
                    draw:
                        text-blend-order: { font: { size: 14px } }

    playa-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - kind: playa
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 7 },  area: { min: 1500000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        draw:
            text-blend-order:
                font:
                    fill: [0.50,0.50,0.50]
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        # debug only
#        icons:
#            size: [[13, 12px], [15, 18px]]
#            interactive: true
#            sprite: *townspot_sprite

    water-line-labels:
        data: { source: osm, layer: [water] }
        filter:
            all:
                - name: true
                - area: false
                - kind: [river,canal,stream,dam,ditch,drain]
                - $zoom: { min: 14 }
        draw:
            text-blend-order:
                font:
                    fill: *text_fill_water
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        water-line-labels-z14:
            filter: { $zoom: [14] }
            draw:
                text-blend-order: { font: { size: 10px } }
        water-line-labels-z17:
            filter: { $zoom: [17] }
            draw:
                text-blend-order: { font: { size: 14px } }
        not-river-not-stream:
            filter: { kind: [canal,dam,ditch,drain], $zoom: { max: 16 } }
            draw:
                text-blend-order:
                    visible: false
        stream:
            filter: { kind: [stream], $zoom: { max: 17 } }
            draw:
                text-blend-order:
                    visible: false
                 
    landuse:
        data: { source: osm }
        tier1:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 3 },  area: { min: 300000000 } }
                    - { $zoom: { min: 4 },  area: { min: 300000000 } }
                    - { $zoom: { min: 5 },  area: { min: 150000000 } }
                    - { $zoom: { min: 6 },  area: { min: 150000000 } }
                    - { $zoom: { min: 7 },  area: { min: 100000000 } }
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            national_park:
                filter: { kind: [national_park, "park or protected land"], not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] } }
                draw:
                    park-dots1:
                        interactive: true
                        color: [0.790,0.790,0.790]
                        # todo: what is this?
                        order: 1
                        visible: true
                us_national_park:
                    # yosemite national park, death valley national park, grand canyon national park
                    filter: { operator: [ "United States National Park Service", "US National Park Service" ] }
                    draw:
                        pixel-pattern-light:
                            visible: true

        tier2:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 4 },  area: { min: 1000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 1000000000 } }
                    - { $zoom: { min: 6 },  area: { min: 150000000 } }
                    - { $zoom: { min: 7 },  area: { min: 100000000 } }
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            conservation:
                filter:
                    kind: [conservation, protected_area, nature_reserve]
                    $zoom: { min: 4 }
                draw:
                    polygons:
                        color: [1.00,1.00,1.00]
                        visible: true
                wilderness-areas:
                    filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
                    draw:
                        pixel-pattern-light:
                            order: 10
                            visible: true

                national_forest_level_6:
                    filter: { protect_class: ["6",6] }
                    draw:
                        park-dots1:
                            color: [0.810,0.810,0.810] #*green7
                            visible: true

            # gotta be a protected area to draw green, not just a landcover type
            farm:
                filter:
                    kind: [farm, farmland]
                    $zoom: { min: 10}
                draw:
                    polygons:
                        color: [1.00,1.00,1.00]
                        visible: *green4_v
            forest:
                filter: { kind: [forest,wood], $zoom: { min: 6 } }
                national-forest:
                    filter:
                        operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ]
                    draw:
                        pixel-pattern-dark:
                            color: *green7
                            visible: true

                landuse-forest:
                    filter:
                        not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] }
                        $zoom: { min: 10 }
                    draw:
                        medium-dots: 
                            color: [0.890,0.890,0.890]
                            visible: false

            nature_reserve:
                filter: { kind: nature_reserve, $zoom: { min: 7 } }
                draw:
                    pixel-pattern-light:
                        order: 3
                wilderness-areas:
                    filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
                    draw:
                        pixel-pattern-light:
                            color: [1.0,1.0,1.0]
                        outline:
                            style: lines
                            color: *green6
                            width: [[9,0px],[10,2px],[12,4px]]

            parks-and-national-forests-not-national-park:
                filter: { $zoom: { min: 4 }, kind: [park, national_park, "park or protected land"], not: { operator: [ "United States National Park Service", "US National Park Service" ] } }
                # default for national forests and more?
                draw:
                    park-dots1:
                        color: [0.760,0.760,0.760]
                        order: function() { return feature.sort_key + 1 || 1; }
                        visible: true

            urban:
                filter: { kind: [urban, rural, residential] }
                visible: *earth2_v
                draw:
                    polygons:
                        color: [1.00,1.00,1.00]
                        visible: *earth2_v
        tier3:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            airport:
                filter:
                    kind: aerodrome
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: *purple_v
            military:
                filter:
                    kind: military
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            university:
                filter:
                    kind: university
                draw:
                    dots-rev:
                        color: [0.945,0.945,0.945]
                        order: function() { return (feature.sort_key - 2) || 1; }
                        visible: true
        tier4:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            cemetery:
                filter:
                    kind: cemetery
                draw:
                    tiny-dots:
                        color: [0.890,0.890,0.890]
                        order: 11
                        visible: true
            # commercial:
            #     filter:
            #         kind: commercial
            #     draw:
            #         dots2:
            #             color: [0.855,0.748,0.667]
            #             visible: *grey1_v
            golf_course:
                filter:
                    kind: golf_course
                draw:
                    medium-dots:
                        color: [0.830,0.830,0.830]
                        visible: true
            hospital:
                filter:
                    kind: hospital
                draw:
                    medium-dots:
                        color: [0.890,0.890,0.890]
                        visible: true
            industrial:
                filter:
                    kind: industrial
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            power:
                filter: { kind: [plant, generator, substation] }
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            railway:
                filter:
                    kind: railway
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            sports_centre:
                filter:
                    kind: sports_centre
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        order: function() { return (feature.sort_key + 1) || 1; }
            recreation_ground:
                filter:
                    kind: recreation_ground
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            retail:
                filter:
                    kind: retail
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: *grey1_v
            stadium:
                filter:
                    kind: stadium
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            zoo:
                filter:
                    kind: zoo
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            winter_sports:
                filter:
                    kind: winter_sports
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: *grey8_v
            man-made:
                filter: { kind: [pier,wastewater_plant,works,bridge,tower,breakwater,water_works,groyne,dike,cutline] }
                draw: { horizontal-bars: { order: 2, color: [0.90,0.90,0.90], visible: true } }
                pier:
                    filter: { kind: [pier,bridge,breakwater,groyne,dike,cutline] }
                    draw: { polygons: { order: 7, color: [0.970,0.970,0.970], visible: true } }
        tier5:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            garden:
                filter:
                    kind: garden
                draw:
                    tiny-dots:
                        color: [0.760,0.760,0.760]
                        order: 4
                        visible: true
            parking:
                filter:
                    all:
                        - kind: parking
                        - $zoom: { min: 14 }
                    any:
                        - { $zoom: { min: 14 }, area: { min: 10000 } }
                        - { $zoom: { min: 15 }, area: { min: 5000 } }
                draw:
                    horizontal-bars-rev:
                        color: [0.950,0.950,0.950]
                        visible: *grey1_v
                early:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        horizontal-bars-rev:
                            color: [0.950,0.950,0.950]
                            visible: true
            pedestrian:
                filter:
                    kind: [pedestrian,common]
                draw:
                    park-dots1:
                        color: [0.950,0.950,0.950]
                        visible: *grey1_v
            pitch:
                filter: { kind: pitch }
                draw:
                    tiny-dots:
                        order: 7
                        color: [0.90,0.90,0.90]
                        visible: true
                    outline:
                        style: lines
                        color: *green6
                        width: [[14,0px],[15,1px],[16,1m]]
            place_of_worship:
                filter:
                    kind: place_of_worship
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: *grey1_v
            playground:
                filter:
                    kind: playground
                draw:
                    polygons:
                        color: [1.0,1.0,1.0]
                        visible: true
            school:
                filter:
                    kind: school
                draw:
                    dots-rev:
                        color: [0.945,0.945,0.945]
                        visible: true
        z-order:
            draw:
                park-dots1:
                    order: function() { return feature.sort_key || 1; }
                    visible: false
                medium-dots:
                    order: function() { return feature.sort_key || 1; }
                    visible: false
                horizontal-bars:
                    order: function() { return feature.sort_key || 1; }
                    visible: false
                horizontal-bars-rev:
                    order: function() { return feature.sort_key || 1; }
                    visible: false
                dots-rev:
                    order: function() { return feature.sort_key || 1; }
                    visible: false
                polygons:
                    order: function() { return feature.sort_key || 1; }

    landuse-not-filtered:
        data: { source: osm, layer: landuse }
        # runways and taxiways are also in the roads layer as lines
        # these ones are probably duplicate features, but have AREA (a good thing)
        runway:
            filter:
                kind: runway
            draw:
                polygons:
                    order: 10
                    color: black
        apron:
            filter:
                kind: apron
                $zoom: { min: 15}
            draw:
                polygons:
                    order: 3
                    color: [1.000, 1.000, 1.000]
                    visible: *grey1_v

    # landuse_urban_area-early:
    #     data: { source: osm, layer: landuse }
    #     filter:
    #         # This is from Natural Earth and only shows up from zoom(0,9)
    #         kind: ['urban area']
    #     draw:
    #         dots2:
    #             order: 1
    #             color: [[4, [1.000,0.510,0.894]], [6, [1.000,0.510,0.894]], [7, [0.882,0.639,0.827]], [8, [0.757,0.729,0.753]]]

    debug:
        data: { source: osm }
        draw:
            flat_lines:
                width: 2px
                order: 100
                color: '#ff0000'