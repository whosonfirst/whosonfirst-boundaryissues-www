{capture assign="page_title"}{$pipeline_filename} ({$pipeline_id}){/capture}
{include file='inc_head.txt' nav_tab='edit'}

<div class="container">
	<div class="row">
		<div class="col-md-12">
			<h2>Pipeline {$pipeline_id|@escape}</h2>
			<small>{$pipeline_filename|@escape} (<span id="pipeline-phase" class="hey-look">{$pipeline_phase|@escape}</span> {$pipeline_type|@escape} pipeline)</small>
			{if $pipeline_phase == 'error'}
				<form id="pipeline-update" method="post" action="." class="alert alert-danger headroom" data-crumb="{$crumb_update|escape}" data-id="{$pipeline_id|@escape}">
					This pipeline hit an error.
					<div class="headroom">
						<input type="submit" value="Retry" class="btn btn-primary">
						<input type="submit" value="Cancel" class="btn btn-default">
					</div>
				</form>
			{elseif $pipeline_phase == 'confirm'}
				<form id="pipeline-update" method="post" action="." class="alert alert-info headroom" data-crumb="{$crumb_update|escape}" data-id="{$pipeline_id|@escape}">
					This pipeline requires user confirmation before it can get merged. Branch: <a href="https://github.com/{$cfg.wof_github_owner|escape}/{$pipeline_repo|escape}/tree/{$pipeline_branch|@escape}">{$pipeline_branch|@escape}</a> (<a href="https://github.com/{$cfg.wof_github_owner|escape}/{$pipeline_repo|escape}/compare/{$pipeline_branch|@escape}">diff</a>).
					<div class="headroom">
						<input type="submit" value="Confirm" class="btn btn-primary">
						<input type="submit" value="Cancel" class="btn btn-default">
					</div>
				</form>
			{elseif $pipeline_phase != 'cancelled' and $pipeline_phase != 'success'}
				<form id="pipeline-update" method="post" action="." class="alert alert-info headroom" data-crumb="{$crumb_update|escape}" data-id="{$pipeline_id|@escape}">
					Pipeline is {if $pipeline_phase == 'pending' or $pipeline_phase == 'next'}waiting{else}running{/if}.
					<div class="headroom">
						<input type="submit" value="Cancel" class="btn btn-default">
					</div>
				</form>
			{/if}
		</div>
	</div>
	<div class="pipeline-log">
		{foreach from=$logs key=index item=log}
			<div class="pipeline-log-row" id="row-{$index|escape}">
				<div class="row">
					<div class="col-md-9 pipeline-log-summary">{$log.summary|@escape}</div>
					<div class="col-md-3 pipeline-log-date">{$log.created_at|@escape}</div>
				</div>
				<div class="row">
					<div class="col-md-12 pipeline-log-details">{$log.details|@escape}</div>
				</div>
			</div>
		{/foreach}
	</div>
</div>

{literal}
<script>
$(document).ready(function() {
	var update = location.hash.match(/#update(\d+)/);
	if (update) {
		var selector = '#row-' + update[1];
		$(selector).addClass('show-details');
		$('html, body').animate({
			scrollTop: $(selector).offset().top
		}, 500);
	}
});
$('.pipeline-log-summary').click(function(e) {
	var $row = $(e.target).closest('.pipeline-log-row');
	$row.toggleClass('show-details');
	location.href = '#update' + $row.attr('id').substr(4);
});
$('#pipeline-update').submit(function(e) {
	e.preventDefault();
});

$('#pipeline-update input[type="submit"]').click(function(e) {

	var valid_actions = ['confirm', 'retry', 'cancel'];

	var $form = $(e.target).closest('form');
	var value = $(e.target).attr('value');
	var crumb = $form.data('crumb');
	var id = $form.data('id');

	var action = value.toLowerCase();
	if (valid_actions.indexOf(action) == -1) {
		console.error('Invalid action: ' + action);
	}

	$('#pipeline-update').removeClass('alert-danger');
	$('#pipeline-update').addClass('alert-info');
	$('#pipeline-update').html('Loading...');

	var onsuccess = function(rsp) {
		if (rsp.pipeline) {
			var phase = rsp.pipeline.phase;
			$('#pipeline-phase').html(phase);
			$('#pipeline-update').addClass('hidden');
		} else {
			$('#pipeline-update').removeClass('alert-info');
			$('#pipeline-update').addClass('alert-danger');
			$('#pipeline-update').html('Error: unexpected response from server.');
		}
	};

	var onerror = function(rsp) {
		$('#pipeline-update').removeClass('alert-info');
		$('#pipeline-update').addClass('alert-danger');
		$('#pipeline-update').html('Error: ' + rsp.error.message);
	};

	var data = {
		crumb: crumb,
		id: id,
		action: action
	};
	mapzen.whosonfirst.boundaryissues.api.api_call('wof.pipeline.update', data, onsuccess, onerror);
});

</script>
{/literal}
