#!/bin/sh -e

### BEGIN INIT INFO
# Provides:          wof-geojson-server.sh
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

# Stuff you will need to edit

GEOJSON_USER=__GEOJSON_SERVER_USER__
GEOJSON_DAEMON=__GEOJSON_SERVER_DAEMON__

GEOJSON_ARGS="__GEOJSON_SERVER_ARGS__"

# Okay - you shouldn't need to edit anything after this

GEOJSON_ARGS="${GEOJSON_ARGS}"

PID_PATH=/var/run/
PID_NAME=`basename ${GEOJSON_DAEMON}`
PID_FILE=${PID_PATH}${PID_NAME}.pid

if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi

case $1 in
    debug)

        echo "Starting ${PID_NAME} in debug mode w/ options: ${GEOJSON_ARGS}"
        exec sudo -u $GEOJSON_USER $GEOJSON_DAEMON $GEOJSON_ARGS
        ;;
    start)

	if [ -e "${PID_FILE}" ]
	then

	    PID=`cat ${PID_FILE}`
	    COUNT=`ps -p ${PID} | grep ${PID} | wc -l`

	    if [ ${COUNT} = 0 ]
	    then
		rm ${PID_FILE}
	    else
		echo "Error! ${PID_NAME} is currently running!" 1>&2
		exit 1
	    fi
	fi
	
        echo "Starting ${PID_NAME} w/ options: ${GEOJSON_ARGS}"
        PID=`exec sudo -u $GEOJSON_USER $GEOJSON_DAEMON $GEOJSON_ARGS  > /dev/null 2>&1 & echo $!`

        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PID_FILE
            printf "%s\n" "Ok"
	        echo $PID
        fi

        ;;
    stop)

    printf "%-50s" "Stopping $PID_NAME"
        PID=`cat $PID_FILE`

        if [ -f $PID_FILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PID_FILE
        else
            printf "%s\n" "pidfile not found"
        fi

        ;;
    restart)
        $0 stop
        sleep 1
        $0 start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|debug}" >&2
        exit 1
        ;;
esac
